/*
 * Copyright 2016 The BigDL Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.intel.analytics.bigdl.nn

import com.intel.analytics.bigdl.tensor.Tensor
import com.intel.analytics.bigdl.utils.serializer.ModuleSerializationTest
import com.intel.analytics.bigdl.utils.{T, Table}
import org.scalatest.{FlatSpec, Matchers}

import scala.math._

class BoxHeadSpec extends FlatSpec with Matchers {
  "BoxHead" should "be ok" in {
    val inChannels: Int = 6
    val resolution: Int = 7
    val scales: Array[Float] = Array[Float](0.25f, 0.125f)
    val samplingRratio: Int = 2
    val scoreThresh: Float = 0.012f
    val nmsThresh: Float = 0.5f
    val detections_per_img: Int = 100
    val representation_size: Int = 1024
    val numClasses: Int = 81 // coco dataset class number

    val layer = new BoxHead(inChannels, resolution, scales, samplingRratio, scoreThresh,
      nmsThresh, detections_per_img, representation_size, numClasses)

    val params = layer.getParameters()
    params._1.fill(0.001f)

    val features1 = Tensor[Float](T(T(T(
        T(0.4225, 0.6287, 0.4108, 0.5272),
        T(0.6714, 0.0680, 0.2866, 0.1765),
        T(0.8650, 0.4987, 0.9253, 0.7914)),

        T(T(0.0264, 0.2524, 0.1257, 0.5725),
          T(0.6423, 0.1356, 0.3944, 0.0141),
          T(0.9096, 0.2509, 0.5605, 0.8632)),

        T(T(0.9683, 0.0549, 0.6259, 0.3762),
          T(0.3638, 0.8891, 0.2664, 0.2837),
          T(0.9326, 0.1827, 0.7227, 0.2481)),

        T(T(0.6557, 0.9165, 0.8756, 0.5103),
          T(0.4360, 0.8133, 0.0823, 0.2113),
          T(0.2167, 0.9266, 0.9105, 0.1651)),

        T(T(0.8999, 0.8347, 0.5532, 0.2879),
          T(0.1027, 0.0516, 0.9670, 0.2939),
          T(0.8113, 0.5250, 0.0378, 0.2784)),

        T(T(0.2387, 0.5709, 0.2917, 0.5493),
          T(0.9709, 0.3801, 0.7908, 0.4004),
          T(0.5152, 0.7003, 0.5848, 0.2894)))))

    val features2 = Tensor[Float](T(T(T(
        T(0.4946, 0.2608),
        T(0.4005, 0.2644),
        T(0.8069, 0.8160),
        T(0.9803, 0.1142),
        T(0.3023, 0.1687)),

        T(T(0.1729, 0.7137),
          T(0.2192, 0.2045),
          T(0.4112, 0.4602),
          T(0.8264, 0.4080),
          T(0.9286, 0.2458)),

        T(T(0.0585, 0.9190),
          T(0.4231, 0.3296),
          T(0.0760, 0.2377),
          T(0.0743, 0.4729),
          T(0.2597, 0.5092)),

        T(T(0.9204, 0.1691),
          T(0.2999, 0.5060),
          T(0.0182, 0.2920),
          T(0.0119, 0.3593),
          T(0.9800, 0.4025)),

        T(T(0.9874, 0.8074),
          T(0.3378, 0.7128),
          T(0.3650, 0.8991),
          T(0.4262, 0.8433),
          T(0.5001, 0.3274)),

        T(T(0.7418, 0.2529),
          T(0.0263, 0.3555),
          T(0.9085, 0.9952),
          T(0.3573, 0.5961),
          T(0.8601, 0.7605)))))

    val bbox = T(Tensor[Float](T(T(1.0f, 3.0f, 2.0f, 6.0f),
      T(3.0f, 5.0f, 6.0f, 7.0f))))
    val imageInfo = Tensor[Float](T(10, 10))

    layer.evaluate()

    val output = layer.forward(T(T(features1, features2), bbox, imageInfo)).toTable[Table](2)

    val expectedBbox = Tensor[Float](T(
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975)))
    val expectedLabel = Tensor[Float](
      T( 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
      10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18,
      19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
      28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36,
      37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45,
      46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 54,
      55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63, 63,
      64, 64, 65, 65, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 72, 72,
      73, 73, 74, 74, 75, 75, 76, 76, 77, 77, 78, 78, 79, 79, 80, 80))

    output[Tensor[Float]](1) should be (expectedLabel)

    output[Table](2)[Tensor[Float]](1).map(expectedBbox, (v1, v2) => {
      assert(abs(v1 - v2) < 1e-3)
      v1
    })
  }

  "BoxHead with batch size > 1" should "be ok" in {
    val inChannels: Int = 6
    val resolution: Int = 7
    val scales: Array[Float] = Array[Float](0.25f, 0.125f)
    val samplingRratio: Int = 2
    val scoreThresh: Float = 0.012f
    val nmsThresh: Float = 0.5f
    val detections_per_img: Int = 100
    val representation_size: Int = 1024
    val numClasses: Int = 81 // coco dataset class number

    val layer = new BoxHead(inChannels, resolution, scales, samplingRratio, scoreThresh,
      nmsThresh, detections_per_img, representation_size, numClasses)

    val params = layer.getParameters()
    params._1.fill(0.001f)

    val features1 = Tensor[Float](T(T(T(
      T(0.4225, 0.6287, 0.4108, 0.5272),
      T(0.6714, 0.0680, 0.2866, 0.1765),
      T(0.8650, 0.4987, 0.9253, 0.7914)),

      T(T(0.0264, 0.2524, 0.1257, 0.5725),
        T(0.6423, 0.1356, 0.3944, 0.0141),
        T(0.9096, 0.2509, 0.5605, 0.8632)),

      T(T(0.9683, 0.0549, 0.6259, 0.3762),
        T(0.3638, 0.8891, 0.2664, 0.2837),
        T(0.9326, 0.1827, 0.7227, 0.2481)),

      T(T(0.6557, 0.9165, 0.8756, 0.5103),
        T(0.4360, 0.8133, 0.0823, 0.2113),
        T(0.2167, 0.9266, 0.9105, 0.1651)),

      T(T(0.8999, 0.8347, 0.5532, 0.2879),
        T(0.1027, 0.0516, 0.9670, 0.2939),
        T(0.8113, 0.5250, 0.0378, 0.2784)),

      T(T(0.2387, 0.5709, 0.2917, 0.5493),
        T(0.9709, 0.3801, 0.7908, 0.4004),
        T(0.5152, 0.7003, 0.5848, 0.2894)))))

    val features2 = Tensor[Float](T(T(T(
      T(0.4946, 0.2608),
      T(0.4005, 0.2644),
      T(0.8069, 0.8160),
      T(0.9803, 0.1142),
      T(0.3023, 0.1687)),

      T(T(0.1729, 0.7137),
        T(0.2192, 0.2045),
        T(0.4112, 0.4602),
        T(0.8264, 0.4080),
        T(0.9286, 0.2458)),

      T(T(0.0585, 0.9190),
        T(0.4231, 0.3296),
        T(0.0760, 0.2377),
        T(0.0743, 0.4729),
        T(0.2597, 0.5092)),

      T(T(0.9204, 0.1691),
        T(0.2999, 0.5060),
        T(0.0182, 0.2920),
        T(0.0119, 0.3593),
        T(0.9800, 0.4025)),

      T(T(0.9874, 0.8074),
        T(0.3378, 0.7128),
        T(0.3650, 0.8991),
        T(0.4262, 0.8433),
        T(0.5001, 0.3274)),

      T(T(0.7418, 0.2529),
        T(0.0263, 0.3555),
        T(0.9085, 0.9952),
        T(0.3573, 0.5961),
        T(0.8601, 0.7605)))))

    val bbox = Tensor[Float](T(T(1.0f, 3.0f, 2.0f, 6.0f),
      T(3.0f, 5.0f, 6.0f, 7.0f)))
    val labels = Tensor[Float](T(1, 3))

    layer.evaluate()

    val features12 = Tensor[Float](2, features1.size(2), features1.size(3), features1.size(4))
    features12.select(1, 1).copy(features1)
    features12.select(1, 2).copy(features1)

    val features22 = Tensor[Float](2, features2.size(2), features2.size(3), features2.size(4))
    features22.select(1, 1).copy(features2)
    features22.select(1, 2).copy(features2)

    val bbox2 = T(Tensor[Float](T(T(1.0f, 3.0f, 2.0f, 6.0f),
      T(3.0f, 5.0f, 6.0f, 7.0f))), Tensor[Float](T(T(1.0f, 3.0f, 2.0f, 6.0f),
      T(3.0f, 5.0f, 6.0f, 7.0f))))

    val labels2 = Tensor[Float](T(10, 10))

    // val output = layer.forward(T(T(features1, features2), T(bbox), T(labels))).toTable[Table](2)

    val output = layer.forward(T(T(features12, features22), bbox2, labels2)).toTable[Table](2)

    val expectedBbox = Tensor[Float](T(
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975),
      T(0.9995, 2.9991, 2.0602, 6.1203),
      T(2.9990, 4.9992, 6.1299, 7.0975)))
    val expectedLable = Tensor[Float](
      T( 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,
        10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18,
        19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
        28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36,
        37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45,
        46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 54,
        55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63, 63,
        64, 64, 65, 65, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 72, 72,
        73, 73, 74, 74, 75, 75, 76, 76, 77, 77, 78, 78, 79, 79,
        1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11,
        12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18,
        19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27,
        28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36,
        37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45,
        46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 54,
        55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63, 63,
        64, 64, 65, 65, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 72, 72,
        73, 73, 74, 74, 75, 75, 76, 76, 77, 77, 78, 78, 79, 79))

    output[Tensor[Float]](1) should be (expectedLable)

    output[Table](2)[Tensor[Float]](1).map(expectedBbox, (v1, v2) => {
      assert(abs(v1 - v2) < 1e-3)
      v1
    })

    output[Table](2)[Tensor[Float]](2).map(expectedBbox, (v1, v2) => {
      assert(abs(v1 - v2) < 1e-3)
      v1
    })

  }

  "FeatureExtractor in BoxHead" should "be ok" in {
    val inChannels: Int = 6
    val resolution: Int = 7
    val scales: Array[Float] = Array[Float](0.25f, 0.125f)
    val samplingRratio: Int = 2
    val scoreThresh: Float = 0.012f
    val nmsThresh: Float = 0.5f
    val detections_per_img: Int = 100
    val representation_size: Int = 1024
    val numClasses: Int = 81 // coco dataset class number

    val boxhead = new BoxHead(inChannels, resolution, scales, samplingRratio, scoreThresh,
      nmsThresh, detections_per_img, representation_size, numClasses)

    val layer = boxhead.featureExtractor(inChannels, resolution, scales,
      samplingRratio.toInt, representation_size)

    val params = layer.getParameters()
    params._1.fill(0.001f)

    val input =
      T(Tensor[Float](T(T(T(T(0.2652, 0.0117, 0.7870, 0.7771),
        T(0.8887, 0.1465, 0.0116, 0.7175),
        T(0.1002, 0.2846, 0.6837, 0.8163)),
        T(T(0.4443, 0.5314, 0.6855, 0.7886),
          T(0.0127, 0.4880, 0.5673, 0.0363),
          T(0.9980, 0.5475, 0.3907, 0.1388)),
        T(T(0.0759, 0.3783, 0.7572, 0.9239),
          T(0.4756, 0.9104, 0.0507, 0.6461),
          T(0.0820, 0.7182, 0.0194, 0.7705)),
        T(T(0.6381, 0.8038, 0.5847, 0.0681),
          T(0.2012, 0.3092, 0.9843, 0.2165),
          T(0.9428, 0.2162, 0.0829, 0.4050)),
        T(T(0.4453, 0.2616, 0.6108, 0.6562),
          T(0.7900, 0.4529, 0.8934, 0.2507),
          T(0.1853, 0.8457, 0.8730, 0.6635)),
        T(T(0.1257, 0.4139, 0.3218, 0.1551),
          T(0.2408, 0.8716, 0.7023, 0.3724),
          T(0.7436, 0.3309, 0.3117, 0.8723))))),
        Tensor[Float](T(T(T(T(0.4907, 0.3940),
          T(0.5765, 0.6642),
          T(0.8227, 0.4993),
          T(0.7554, 0.4512),
          T(0.6055, 0.3898)),
          T(T(0.4105, 0.1730),
            T(0.2907, 0.8862),
            T(0.4373, 0.5254),
            T(0.4349, 0.5054),
            T(0.8567, 0.7000)),
          T(T(0.5932, 0.0901),
            T(0.1488, 0.8821),
            T(0.1665, 0.3353),
            T(0.3736, 0.6871),
            T(0.3214, 0.8596)),
          T(T(0.1705, 0.9588),
            T(0.3957, 0.4588),
            T(0.3426, 0.1921),
            T(0.3661, 0.1462),
            T(0.6675, 0.5090)),
          T(T(0.7188, 0.7556),
            T(0.5221, 0.7814),
            T(0.9024, 0.0615),
            T(0.7277, 0.5004),
            T(0.5957, 0.1157)),
          T(T(0.8777, 0.7517),
            T(0.5792, 0.2707),
            T(0.6614, 0.4466),
            T(0.6752, 0.2068),
            T(0.7227, 0.6391))))))

    val proposals = Tensor[Float](T(T(1.0f, 3.0f, 2.0f, 6.0f), T(3.0f, 5.0f, 6.0f, 10.0f)))

    val imageInfo = Tensor[Float](T(10, 15))

    val expectedOutput = Tensor[Float](T(
      T(2.2933e-01, 4.7398e-01, 0.0000e+00, 0.0000e+00, 3.0377e-01, 0.0000e+00,
        1.5809e-01, 0.0000e+00, 3.4213e-03, 2.0427e-02, 0.0000e+00, 0.0000e+00,
        1.8175e-01, 3.0648e-01, 3.0486e-01, 4.8535e-01, 1.0736e-01, 0.0000e+00,
        0.0000e+00, 1.1959e-01, 4.1052e-01, 0.0000e+00, 0.0000e+00, 2.6293e-01,
        4.3437e-01, 7.2744e-01, 2.8527e-01, 0.0000e+00, 5.7330e-01, 3.2637e-02,
        3.6768e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2849e-01,
        0.0000e+00, 7.6325e-01, 5.8331e-01, 1.9046e-01, 0.0000e+00, 6.1702e-01,
        0.0000e+00, 0.0000e+00, 4.2936e-01, 2.5023e-01, 1.5075e-02, 8.7771e-02,
        0.0000e+00, 5.7307e-01, 0.0000e+00, 8.0079e-01, 0.0000e+00, 0.0000e+00,
        2.6381e-03, 0.0000e+00, 1.1355e-01, 3.3714e-01, 1.6419e-01, 0.0000e+00,
        1.2210e-01, 0.0000e+00, 3.1064e-01, 2.6534e-01, 0.0000e+00, 9.3856e-01,
        0.0000e+00, 2.0916e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.8734e-01,
        0.0000e+00, 4.2838e-01, 4.2797e-01, 0.0000e+00, 0.0000e+00, 1.0801e-01,
        0.0000e+00, 7.2708e-02, 6.4211e-02, 2.4386e-01, 4.8236e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.1248e-01, 0.0000e+00,
        3.6260e-01, 0.0000e+00, 2.6733e-01, 4.3891e-01, 0.0000e+00, 9.4399e-01,
        4.3039e-01, 1.9963e-01, 5.5950e-01, 0.0000e+00, 5.7901e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.4324e-02, 0.0000e+00, 5.7276e-02, 5.4953e-01,
        1.1287e-01, 7.1539e-02, 6.8938e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        7.2902e-02, 1.1641e-01, 4.0944e-02, 1.0786e-01, 7.0635e-01, 0.0000e+00,
        6.2662e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.1090e-01, 0.0000e+00, 0.0000e+00, 3.8734e-01, 0.0000e+00, 9.4146e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6706e-01, 0.0000e+00, 0.0000e+00,
        9.5533e-01, 2.9218e-01, 7.2061e-01, 0.0000e+00, 3.2076e-01, 0.0000e+00,
        1.9556e-01, 0.0000e+00, 7.7142e-01, 2.0086e-01, 3.6382e-02, 0.0000e+00,
        2.4287e-01, 5.7229e-01, 0.0000e+00, 0.0000e+00, 2.8146e-01, 0.0000e+00,
        2.1619e-01, 0.0000e+00, 5.3419e-01, 0.0000e+00, 3.7420e-01, 0.0000e+00,
        3.9476e-03, 0.0000e+00, 0.0000e+00, 2.9974e-01, 2.0722e-01, 1.1056e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5141e-01, 0.0000e+00,
        0.0000e+00, 8.1091e-01, 6.0005e-01, 5.3662e-03, 5.5893e-02, 0.0000e+00,
        9.1367e-01, 3.9175e-01, 4.4933e-01, 3.6535e-01, 3.2467e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.4286e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5753e-01, 0.0000e+00,
        0.0000e+00, 4.3492e-02, 0.0000e+00, 3.9084e-01, 4.5749e-01, 0.0000e+00,
        8.8619e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8256e-01, 4.3740e-01,
        5.4134e-01, 8.1222e-01, 1.1236e+00, 3.8259e-01, 0.0000e+00, 4.0677e-01,
        0.0000e+00, 6.1217e-01, 0.0000e+00, 0.0000e+00, 9.0240e-02, 0.0000e+00,
        0.0000e+00, 3.7207e-01, 3.4780e-01, 0.0000e+00, 8.2428e-02, 0.0000e+00,
        0.0000e+00, 6.4101e-02, 6.2217e-01, 0.0000e+00, 0.0000e+00, 1.4846e-01,
        1.4339e-01, 0.0000e+00, 0.0000e+00, 1.4410e-01, 9.8182e-01, 6.2625e-01,
        0.0000e+00, 5.8311e-01, 3.7540e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.7168e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.5780e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5917e-01, 3.9157e-01, 2.2357e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.0621e-01, 0.0000e+00, 0.0000e+00,
        1.5849e-01, 0.0000e+00, 2.8027e-02, 1.3950e-01, 0.0000e+00, 4.5800e-01,
        4.8431e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.2327e-01, 3.9075e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.7243e-01, 6.9952e-01, 3.3709e-01, 7.4156e-02,
        0.0000e+00, 0.0000e+00, 4.3161e-01, 0.0000e+00, 5.5968e-01, 5.1705e-02,
        0.0000e+00, 0.0000e+00, 3.0565e-01, 4.5431e-01, 0.0000e+00, 4.4742e-02,
        2.3583e-01, 8.6285e-01, 0.0000e+00, 6.5763e-02, 0.0000e+00, 7.2151e-01,
        7.7982e-01, 5.3851e-01, 0.0000e+00, 0.0000e+00, 3.1895e-01, 0.0000e+00,
        0.0000e+00, 8.2074e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.9684e-01, 0.0000e+00, 0.0000e+00, 2.1435e-03,
        0.0000e+00, 4.0795e-02, 6.0204e-01, 5.3779e-02, 3.4706e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0793e-01,
        0.0000e+00, 2.8389e-01, 9.6737e-02, 0.0000e+00, 4.0340e-01, 5.9990e-01,
        9.6217e-01, 1.7721e-01, 0.0000e+00, 0.0000e+00, 2.1650e-01, 0.0000e+00,
        3.6605e-01, 1.4687e-01, 0.0000e+00, 0.0000e+00, 3.9823e-01, 3.9444e-01,
        0.0000e+00, 0.0000e+00, 2.0717e-01, 3.5793e-01, 0.0000e+00, 0.0000e+00,
        5.3949e-01, 3.0678e-01, 0.0000e+00, 5.6074e-01, 0.0000e+00, 5.5505e-01,
        0.0000e+00, 6.2500e-01, 1.4662e-01, 1.7523e-01, 1.1858e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.8805e-01, 0.0000e+00, 0.0000e+00, 2.7573e-01,
        7.1308e-02, 0.0000e+00, 5.8064e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.5257e-02, 1.0648e-01, 0.0000e+00,
        4.6254e-02, 0.0000e+00, 2.1399e-02, 4.7951e-01, 0.0000e+00, 0.0000e+00,
        2.7274e-01, 1.7287e-01, 0.0000e+00, 4.2774e-01, 0.0000e+00, 0.0000e+00,
        2.3287e-01, 0.0000e+00, 0.0000e+00, 1.0729e-01, 0.0000e+00, 6.1395e-01,
        8.5825e-01, 0.0000e+00, 1.5815e-01, 0.0000e+00, 7.7004e-02, 0.0000e+00,
        4.0929e-01, 3.3197e-01, 0.0000e+00, 0.0000e+00, 3.9544e-01, 6.5016e-02,
        0.0000e+00, 3.9518e-01, 0.0000e+00, 0.0000e+00, 3.6473e-01, 6.8897e-01,
        2.2457e-01, 4.7769e-01, 1.2626e-01, 0.0000e+00, 0.0000e+00, 3.9260e-01,
        0.0000e+00, 0.0000e+00, 2.5657e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0502e-01, 3.7539e-01, 8.7846e-01, 6.4727e-02,
        1.1631e-01, 1.1159e-01, 9.1746e-01, 1.7563e-01, 7.0101e-02, 1.5769e-01,
        0.0000e+00, 0.0000e+00, 4.7747e-01, 0.0000e+00, 0.0000e+00, 2.3046e-02,
        6.8920e-02, 0.0000e+00, 8.2851e-01, 1.2707e-01, 0.0000e+00, 0.0000e+00,
        2.7831e-01, 0.0000e+00, 7.0561e-01, 0.0000e+00, 0.0000e+00, 5.4838e-01,
        0.0000e+00, 0.0000e+00, 6.3581e-02, 1.5840e-02, 2.3359e-01, 0.0000e+00,
        1.1576e-01, 1.8558e-02, 3.4576e-01, 5.1232e-02, 0.0000e+00, 3.6624e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3642e-01,
        0.0000e+00, 0.0000e+00, 2.1666e-01, 6.6057e-01, 2.2358e-01, 2.1319e-01,
        0.0000e+00, 0.0000e+00, 1.5222e-01, 0.0000e+00, 4.0792e-01, 5.0303e-01,
        3.2759e-01, 5.0508e-01, 6.1877e-01, 0.0000e+00, 5.3355e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.7622e-01, 0.0000e+00, 5.2218e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.0829e-01, 5.4879e-02, 0.0000e+00,
        0.0000e+00, 2.7878e-01, 1.4440e-01, 3.2567e-02, 5.8117e-01, 0.0000e+00,
        2.1245e-02, 0.0000e+00, 7.7204e-01, 6.7993e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 5.7836e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.1558e-01, 7.0709e-03, 4.5603e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 9.1948e-01, 0.0000e+00, 6.2814e-01, 0.0000e+00, 0.0000e+00,
        3.3349e-01, 3.0334e-01, 4.3112e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.0491e-02, 2.3031e-03, 0.0000e+00, 0.0000e+00, 4.4998e-01,
        3.3105e-01, 0.0000e+00, 6.7470e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.7714e-01, 0.0000e+00, 6.5216e-01, 2.7070e-01, 3.8228e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.1267e-01, 0.0000e+00, 4.5109e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.5450e-01, 4.0487e-02,
        0.0000e+00, 1.2057e+00, 1.6021e-01, 0.0000e+00, 0.0000e+00, 1.4730e-01,
        3.1517e-01, 3.1166e-01, 0.0000e+00, 5.8983e-02, 0.0000e+00, 3.9183e-02,
        0.0000e+00, 5.9395e-01, 1.8784e-01, 7.6888e-01, 0.0000e+00, 0.0000e+00,
        8.3103e-02, 2.5260e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.5295e-01,
        6.6527e-01, 0.0000e+00, 4.2463e-01, 4.4498e-01, 3.5978e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.0312e-01, 0.0000e+00, 1.9440e-01, 0.0000e+00,
        7.0238e-02, 0.0000e+00, 8.2609e-01, 0.0000e+00, 1.5140e-01, 1.8528e-01,
        0.0000e+00, 1.0557e-01, 4.4546e-01, 0.0000e+00, 2.4473e-01, 2.0740e-01,
        0.0000e+00, 0.0000e+00, 2.7884e-01, 7.4443e-03, 0.0000e+00, 1.9991e-01,
        0.0000e+00, 0.0000e+00, 2.6190e-01, 0.0000e+00, 2.4432e-01, 3.0944e-01,
        1.7316e-01, 4.4882e-01, 0.0000e+00, 2.7011e-01, 0.0000e+00, 8.2411e-02,
        2.6806e-01, 4.2293e-01, 5.7905e-01, 3.9226e-02, 0.0000e+00, 0.0000e+00,
        7.4738e-01, 0.0000e+00, 6.4801e-01, 0.0000e+00, 1.1211e-01, 1.9855e-01,
        2.1242e-01, 0.0000e+00, 0.0000e+00, 5.3369e-01, 2.1392e-01, 0.0000e+00,
        0.0000e+00, 5.6768e-02, 7.3865e-01, 0.0000e+00, 4.4628e-01, 5.4678e-01,
        0.0000e+00, 1.2406e+00, 5.4774e-01, 0.0000e+00, 8.3491e-01, 0.0000e+00,
        2.8482e-03, 0.0000e+00, 2.3726e-02, 4.4714e-01, 0.0000e+00, 4.3510e-01,
        8.8795e-03, 1.1618e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.3650e-01,
        0.0000e+00, 2.5490e-01, 0.0000e+00, 1.0139e+00, 2.2726e-01, 0.0000e+00,
        0.0000e+00, 3.7998e-01, 0.0000e+00, 5.2665e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8971e-01, 3.7777e-02,
        2.4558e-02, 0.0000e+00, 6.1270e-01, 5.3864e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 4.3362e-01, 0.0000e+00, 3.1963e-01, 0.0000e+00, 8.6494e-02,
        8.9975e-02, 0.0000e+00, 3.6914e-01, 0.0000e+00, 0.0000e+00, 2.0640e-02,
        0.0000e+00, 4.0372e-01, 7.4526e-02, 0.0000e+00, 0.0000e+00, 1.4382e-01,
        0.0000e+00, 1.8750e-01, 1.7591e-01, 0.0000e+00, 1.8670e-02, 0.0000e+00,
        2.7231e-01, 4.2284e-01, 1.0397e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.1628e-01, 0.0000e+00, 0.0000e+00, 2.6968e-01, 0.0000e+00,
        0.0000e+00, 3.1947e-01, 0.0000e+00, 1.6322e-01, 3.1021e-02, 0.0000e+00,
        4.2218e-01, 0.0000e+00, 0.0000e+00, 5.2111e-01, 0.0000e+00, 0.0000e+00,
        2.7029e-01, 1.4907e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.9614e-01,
        0.0000e+00, 0.0000e+00, 6.8842e-02, 0.0000e+00, 3.9265e-01, 1.5416e-02,
        0.0000e+00, 2.6446e-01, 0.0000e+00, 2.4775e-01, 0.0000e+00, 2.1911e-02,
        0.0000e+00, 4.4974e-01, 3.8515e-02, 2.5485e-02, 1.6000e-01, 0.0000e+00,
        0.0000e+00, 7.2951e-01, 0.0000e+00, 2.2118e-01, 6.5213e-01, 0.0000e+00,
        2.9677e-01, 0.0000e+00, 6.0142e-01, 2.0937e-01, 4.9422e-01, 1.2792e-01,
        0.0000e+00, 1.1312e-02, 0.0000e+00, 0.0000e+00, 2.1873e-01, 0.0000e+00,
        2.7908e-02, 0.0000e+00, 4.2024e-02, 8.2473e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 7.6014e-02, 2.0516e-01, 3.6212e-01, 6.7401e-02, 8.0160e-01,
        1.5580e-01, 4.6914e-01, 3.8585e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 4.6813e-01, 4.7961e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.6201e-02, 2.9699e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.2658e-01, 0.0000e+00, 3.2805e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 2.1642e-01, 8.5423e-03, 0.0000e+00, 8.3172e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.6319e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.4710e-01, 1.1487e-01,
        0.0000e+00, 2.1976e-01, 0.0000e+00, 0.0000e+00, 3.4147e-03, 0.0000e+00,
        0.0000e+00, 7.4752e-01, 1.1369e-01, 2.8925e-01, 0.0000e+00, 0.0000e+00,
        6.9137e-03, 0.0000e+00, 6.8495e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 8.7484e-02, 3.6542e-02, 7.0685e-01, 0.0000e+00, 5.1035e-01,
        0.0000e+00, 4.5207e-01, 0.0000e+00, 9.4534e-02, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6015e-01, 3.9820e-02, 1.9649e-01, 5.7938e-01, 0.0000e+00,
        5.0997e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.6138e-01, 9.7867e-02, 5.1788e-03, 4.0551e-02, 3.3331e-01,
        2.0930e-01, 1.7489e-01, 0.0000e+00, 5.2685e-01, 1.5958e-01, 0.0000e+00,
        1.8879e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0311e-01,
        3.4122e-01, 0.0000e+00, 0.0000e+00, 5.3115e-01, 1.6489e-01, 0.0000e+00,
        1.2003e-01, 1.4094e-01, 5.1902e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.7128e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.8408e-01, 1.0612e-01,
        2.6369e-01, 5.6802e-01, 4.3276e-01, 0.0000e+00, 0.0000e+00, 1.7773e-02,
        0.0000e+00, 0.0000e+00, 8.4720e-01, 0.0000e+00, 0.0000e+00, 2.0917e-01,
        0.0000e+00, 5.3588e-01, 1.4548e-01, 2.3757e-01, 0.0000e+00, 1.7626e-01,
        0.0000e+00, 0.0000e+00, 9.9600e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        7.1133e-01, 0.0000e+00, 0.0000e+00, 3.2668e-01, 4.6632e-01, 2.9542e-01,
        5.7628e-01, 0.0000e+00, 0.0000e+00, 1.6011e-01, 2.2801e-01, 2.4029e-01,
        4.0798e-02, 0.0000e+00, 2.4332e-01, 4.1634e-01, 5.6399e-01, 0.0000e+00,
        0.0000e+00, 2.7964e-01, 0.0000e+00, 0.0000e+00, 4.5204e-02, 2.3471e-01,
        5.9523e-01, 5.9002e-01, 3.8267e-01, 0.0000e+00, 6.9757e-01, 0.0000e+00,
        4.1682e-01, 1.8667e-01, 0.0000e+00, 1.6129e-01, 0.0000e+00, 2.1806e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.3339e-01, 4.6584e-01, 0.0000e+00,
        2.3673e-01, 2.9363e-02, 1.3844e-01, 0.0000e+00, 6.9891e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 8.0242e-02, 5.0152e-01, 0.0000e+00, 0.0000e+00,
        2.4636e-01, 2.1743e-01, 0.0000e+00, 0.0000e+00),
      T(3.4477e-01, 5.3790e-01, 0.0000e+00, 0.0000e+00, 2.2307e-01, 0.0000e+00,
        9.5184e-02, 0.0000e+00, 4.9757e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.0260e-01, 3.7487e-01, 4.1819e-01, 6.2474e-01, 1.4737e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.6250e-01, 0.0000e+00, 0.0000e+00, 1.5794e-01,
        6.9416e-01, 8.9911e-01, 3.7086e-01, 0.0000e+00, 4.5447e-01, 1.0841e-01,
        2.4890e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7963e-01,
        0.0000e+00, 5.9176e-01, 6.4291e-01, 3.0385e-01, 0.0000e+00, 3.8872e-01,
        0.0000e+00, 0.0000e+00, 3.6584e-01, 1.8300e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 5.3081e-01, 0.0000e+00, 6.3115e-01, 0.0000e+00, 0.0000e+00,
        9.0696e-02, 0.0000e+00, 2.2288e-02, 3.9550e-01, 1.7167e-01, 0.0000e+00,
        2.3810e-01, 0.0000e+00, 2.1348e-01, 1.6472e-01, 0.0000e+00, 9.7072e-01,
        0.0000e+00, 6.7466e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 7.5414e-02,
        0.0000e+00, 5.0091e-01, 4.1359e-01, 0.0000e+00, 0.0000e+00, 2.0857e-01,
        0.0000e+00, 1.9868e-01, 7.8524e-02, 2.6530e-01, 3.0148e-01, 3.9244e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.6995e-01, 0.0000e+00, 4.5016e-01, 4.2471e-01, 0.0000e+00, 8.5689e-01,
        2.9450e-01, 1.0400e-01, 5.3195e-01, 0.0000e+00, 6.8811e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.7606e-02, 0.0000e+00, 5.7919e-02, 6.7971e-01,
        0.0000e+00, 1.9129e-01, 7.7240e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        1.9061e-01, 2.6352e-01, 0.0000e+00, 0.0000e+00, 7.0253e-01, 0.0000e+00,
        5.6434e-01, 0.0000e+00, 5.5095e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        5.1218e-01, 0.0000e+00, 0.0000e+00, 2.7837e-01, 5.1009e-03, 1.2288e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.4556e-01, 0.0000e+00, 0.0000e+00,
        1.0213e+00, 4.3464e-02, 5.5964e-01, 0.0000e+00, 4.2587e-01, 0.0000e+00,
        1.8511e-01, 0.0000e+00, 5.8170e-01, 2.4356e-01, 1.7729e-02, 0.0000e+00,
        0.0000e+00, 6.4470e-01, 0.0000e+00, 7.3560e-02, 7.5141e-02, 0.0000e+00,
        1.8372e-01, 3.0369e-02, 4.1808e-01, 0.0000e+00, 3.8276e-01, 0.0000e+00,
        5.5623e-02, 0.0000e+00, 2.3709e-01, 9.9455e-02, 1.7909e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 6.2145e-02,
        0.0000e+00, 5.5455e-01, 4.6552e-01, 1.2873e-01, 1.6117e-01, 0.0000e+00,
        8.1001e-01, 3.3079e-01, 3.7088e-01, 4.2121e-01, 3.6645e-01, 0.0000e+00,
        0.0000e+00, 1.4828e-02, 0.0000e+00, 1.1300e-01, 0.0000e+00, 0.0000e+00,
        3.6897e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.0542e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.5009e-01, 5.1069e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3777e-01, 0.0000e+00, 3.4843e-01, 4.7614e-01,
        8.1894e-01, 6.0401e-01, 1.1808e+00, 3.8150e-01, 0.0000e+00, 3.8185e-01,
        1.3258e-01, 4.7142e-01, 0.0000e+00, 0.0000e+00, 1.6631e-01, 0.0000e+00,
        0.0000e+00, 2.8422e-01, 2.3445e-01, 0.0000e+00, 4.0709e-01, 0.0000e+00,
        3.3331e-02, 0.0000e+00, 7.4624e-01, 0.0000e+00, 0.0000e+00, 1.4074e-01,
        2.6273e-02, 1.7291e-01, 0.0000e+00, 3.1316e-01, 7.9369e-01, 5.0961e-01,
        0.0000e+00, 6.3910e-01, 4.4863e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        3.1543e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.0503e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.4077e-02, 2.3304e-01, 4.5136e-01, 3.1046e-01,
        0.0000e+00, 0.0000e+00, 4.6712e-02, 3.0973e-02, 3.9185e-02, 0.0000e+00,
        7.3608e-02, 0.0000e+00, 0.0000e+00, 2.7621e-01, 0.0000e+00, 5.7861e-01,
        5.9262e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.9767e-01, 2.8329e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.6375e-01, 5.8476e-01, 3.0416e-01, 7.8206e-02,
        1.3225e-02, 5.0259e-04, 3.7120e-01, 0.0000e+00, 2.6165e-01, 5.1930e-02,
        0.0000e+00, 0.0000e+00, 3.0789e-01, 5.3606e-01, 0.0000e+00, 1.5168e-01,
        1.7575e-01, 9.5358e-01, 0.0000e+00, 2.5855e-01, 0.0000e+00, 6.6173e-01,
        6.5663e-01, 4.3380e-01, 0.0000e+00, 0.0000e+00, 2.6316e-01, 0.0000e+00,
        0.0000e+00, 8.7554e-01, 2.6346e-02, 0.0000e+00, 4.4752e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.9447e-01, 0.0000e+00, 0.0000e+00, 3.7064e-03,
        0.0000e+00, 2.2273e-01, 5.2556e-01, 1.7410e-01, 2.8065e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.4782e-01,
        0.0000e+00, 3.2743e-01, 2.0456e-01, 0.0000e+00, 4.7197e-01, 4.0365e-01,
        8.1541e-01, 4.3598e-02, 0.0000e+00, 0.0000e+00, 1.9783e-01, 0.0000e+00,
        2.8507e-01, 7.6302e-02, 0.0000e+00, 0.0000e+00, 3.6714e-01, 2.0126e-01,
        0.0000e+00, 0.0000e+00, 8.3921e-02, 8.6749e-02, 1.1394e-01, 0.0000e+00,
        5.0907e-01, 4.0542e-01, 2.0926e-01, 2.9741e-01, 0.0000e+00, 6.4717e-01,
        0.0000e+00, 5.4612e-01, 0.0000e+00, 1.5081e-01, 9.7054e-02, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 4.8004e-01, 0.0000e+00, 0.0000e+00, 3.0902e-01,
        1.7005e-01, 0.0000e+00, 4.2053e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3425e-02, 0.0000e+00, 2.9508e-02,
        1.2342e-01, 6.6151e-02, 1.1795e-01, 4.3885e-01, 0.0000e+00, 6.1384e-02,
        3.2079e-01, 3.3351e-01, 0.0000e+00, 4.7612e-01, 0.0000e+00, 0.0000e+00,
        5.2961e-02, 0.0000e+00, 0.0000e+00, 1.6878e-01, 0.0000e+00, 5.6907e-01,
        9.8154e-01, 0.0000e+00, 2.4978e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.6588e-01, 3.4975e-01, 0.0000e+00, 0.0000e+00, 3.4350e-01, 0.0000e+00,
        0.0000e+00, 4.6224e-01, 1.1569e-01, 0.0000e+00, 2.8777e-01, 5.3360e-01,
        2.5801e-01, 3.6288e-01, 3.0857e-01, 0.0000e+00, 0.0000e+00, 4.2739e-01,
        0.0000e+00, 0.0000e+00, 4.2144e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.3603e-01, 1.5070e-01, 9.2289e-01, 5.9535e-02,
        8.4853e-02, 1.3326e-01, 9.8809e-01, 1.7581e-01, 3.1391e-01, 3.1574e-01,
        0.0000e+00, 0.0000e+00, 2.1502e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.9106e-02, 0.0000e+00, 7.7161e-01, 1.6317e-01, 8.3655e-02, 0.0000e+00,
        4.1273e-01, 0.0000e+00, 7.3198e-01, 0.0000e+00, 0.0000e+00, 5.1957e-01,
        0.0000e+00, 0.0000e+00, 2.0662e-01, 2.0251e-01, 1.9196e-01, 0.0000e+00,
        2.1973e-01, 1.0293e-01, 5.1585e-01, 5.0458e-02, 0.0000e+00, 2.6205e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.2768e-01, 4.1336e-01, 4.1304e-02, 1.3741e-01,
        0.0000e+00, 6.8382e-02, 1.9069e-01, 0.0000e+00, 5.1551e-01, 4.3364e-01,
        5.5200e-01, 3.3187e-01, 6.0491e-01, 0.0000e+00, 4.2924e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.4376e-01, 0.0000e+00, 4.4113e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 8.1884e-01, 8.9262e-02, 0.0000e+00,
        0.0000e+00, 4.9353e-02, 4.0501e-01, 3.6185e-02, 5.6896e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.9891e-01, 6.5879e-01, 0.0000e+00, 1.1593e-02,
        0.0000e+00, 0.0000e+00, 5.9424e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.5864e-01, 6.6448e-02, 5.2231e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 7.5423e-01, 0.0000e+00, 6.6645e-01, 1.2906e-01, 0.0000e+00,
        3.3155e-01, 2.8875e-01, 4.6569e-01, 2.2770e-01, 0.0000e+00, 2.3122e-01,
        0.0000e+00, 2.2629e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.4923e-01,
        3.6517e-01, 0.0000e+00, 9.5871e-03, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        4.2188e-01, 1.5313e-03, 5.2581e-01, 1.9032e-01, 1.1789e-01, 0.0000e+00,
        0.0000e+00, 8.2999e-02, 0.0000e+00, 1.4839e-01, 0.0000e+00, 4.3182e-01,
        0.0000e+00, 1.2897e-01, 4.4780e-02, 0.0000e+00, 9.3899e-02, 0.0000e+00,
        0.0000e+00, 1.1690e+00, 3.1387e-01, 0.0000e+00, 0.0000e+00, 2.5334e-01,
        2.6436e-01, 1.0286e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 5.2249e-01, 2.0861e-01, 7.4454e-01, 0.0000e+00, 0.0000e+00,
        2.5486e-01, 1.8852e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 5.9914e-01,
        9.0941e-01, 0.0000e+00, 2.2463e-01, 3.8639e-01, 2.5263e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.8697e-01, 0.0000e+00, 1.5987e-01, 0.0000e+00,
        8.4178e-02, 0.0000e+00, 8.1653e-01, 1.3396e-02, 0.0000e+00, 6.6077e-02,
        0.0000e+00, 0.0000e+00, 4.0837e-01, 0.0000e+00, 2.1575e-01, 2.2600e-01,
        0.0000e+00, 0.0000e+00, 4.6028e-01, 1.7596e-01, 0.0000e+00, 6.6201e-03,
        0.0000e+00, 0.0000e+00, 2.5426e-01, 0.0000e+00, 1.4503e-01, 2.3080e-01,
        1.4868e-01, 3.3499e-01, 6.6406e-02, 2.2613e-01, 0.0000e+00, 3.2301e-01,
        8.1848e-03, 3.4828e-01, 4.8847e-01, 1.2102e-01, 0.0000e+00, 0.0000e+00,
        6.7854e-01, 0.0000e+00, 5.0661e-01, 0.0000e+00, 2.6678e-01, 0.0000e+00,
        2.8975e-01, 6.6258e-02, 0.0000e+00, 4.7068e-01, 1.8406e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 6.5444e-01, 1.5379e-01, 4.1505e-01, 5.8430e-01,
        0.0000e+00, 1.2742e+00, 3.1801e-01, 0.0000e+00, 7.7948e-01, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 5.2493e-01, 0.0000e+00, 4.6612e-01,
        0.0000e+00, 1.7579e-01, 5.7805e-02, 0.0000e+00, 0.0000e+00, 4.7099e-01,
        0.0000e+00, 4.4843e-01, 7.6184e-02, 9.4211e-01, 1.2329e-01, 0.0000e+00,
        0.0000e+00, 2.4681e-01, 0.0000e+00, 5.4552e-01, 0.0000e+00, 0.0000e+00,
        3.9235e-02, 0.0000e+00, 0.0000e+00, 0.0000e+00, 4.0743e-01, 8.1704e-02,
        0.0000e+00, 0.0000e+00, 5.3216e-01, 4.1451e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 2.9729e-01, 0.0000e+00, 4.1537e-01, 0.0000e+00, 8.4075e-02,
        0.0000e+00, 0.0000e+00, 2.1437e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 1.7877e-01, 6.1475e-02, 0.0000e+00, 0.0000e+00, 2.3879e-01,
        0.0000e+00, 2.3353e-01, 0.0000e+00, 0.0000e+00, 8.7434e-02, 0.0000e+00,
        2.5284e-01, 4.5843e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.6319e-01, 0.0000e+00,
        0.0000e+00, 1.7851e-01, 0.0000e+00, 5.4940e-02, 0.0000e+00, 0.0000e+00,
        7.6305e-01, 0.0000e+00, 0.0000e+00, 5.3016e-01, 0.0000e+00, 6.4501e-02,
        3.2596e-01, 2.2609e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 3.6258e-01,
        0.0000e+00, 0.0000e+00, 3.6065e-02, 0.0000e+00, 4.3639e-01, 0.0000e+00,
        0.0000e+00, 2.8636e-01, 0.0000e+00, 1.2189e-01, 0.0000e+00, 1.9672e-02,
        0.0000e+00, 2.0239e-01, 6.8883e-02, 0.0000e+00, 2.0419e-01, 1.0278e-01,
        0.0000e+00, 6.3682e-01, 0.0000e+00, 0.0000e+00, 3.5179e-01, 0.0000e+00,
        3.3570e-01, 0.0000e+00, 6.4269e-01, 1.8769e-01, 7.2755e-01, 2.6766e-01,
        0.0000e+00, 5.2196e-02, 0.0000e+00, 0.0000e+00, 1.8828e-01, 0.0000e+00,
        1.9833e-01, 0.0000e+00, 1.4594e-01, 6.5152e-01, 0.0000e+00, 0.0000e+00,
        1.3182e-01, 0.0000e+00, 0.0000e+00, 5.1446e-01, 0.0000e+00, 8.8741e-01,
        3.6072e-02, 2.8367e-01, 2.0990e-01, 0.0000e+00, 0.0000e+00, 2.9495e-01,
        9.2837e-02, 2.7265e-01, 4.5158e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 5.1664e-02, 1.8977e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 6.8549e-02, 0.0000e+00, 1.4437e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 3.2509e-02, 2.7062e-02, 0.0000e+00, 1.5187e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.5417e-01,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3508e-01, 3.4785e-01,
        0.0000e+00, 9.3501e-02, 0.0000e+00, 0.0000e+00, 1.0156e-01, 0.0000e+00,
        0.0000e+00, 7.1037e-01, 1.9067e-01, 1.1440e-01, 0.0000e+00, 0.0000e+00,
        1.4178e-01, 1.5496e-01, 6.0515e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 9.0447e-02, 6.1297e-01, 0.0000e+00, 6.6387e-01,
        0.0000e+00, 1.3241e-01, 0.0000e+00, 1.0057e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 4.5816e-01, 9.3208e-02, 1.3828e-01, 3.8518e-01, 0.0000e+00,
        6.0722e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 3.0409e-01, 6.1371e-02, 0.0000e+00, 9.8232e-02, 2.3291e-01,
        3.3932e-01, 5.2183e-02, 0.0000e+00, 5.2186e-01, 8.3608e-02, 0.0000e+00,
        2.1225e-01, 0.0000e+00, 0.0000e+00, 8.4130e-02, 0.0000e+00, 1.3490e-01,
        2.8295e-01, 0.0000e+00, 0.0000e+00, 4.7005e-01, 1.1182e-01, 0.0000e+00,
        0.0000e+00, 1.2451e-01, 3.3872e-01, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        2.5682e-01, 7.9506e-02, 0.0000e+00, 6.3264e-02, 0.0000e+00, 0.0000e+00,
        4.0924e-01, 5.9037e-01, 5.5715e-01, 0.0000e+00, 0.0000e+00, 1.0825e-01,
        0.0000e+00, 0.0000e+00, 7.5731e-01, 0.0000e+00, 0.0000e+00, 3.0620e-01,
        0.0000e+00, 5.8681e-01, 0.0000e+00, 1.4702e-01, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 1.5751e-02, 0.0000e+00, 0.0000e+00, 1.4469e-02,
        5.7545e-01, 0.0000e+00, 0.0000e+00, 2.4175e-01, 5.6689e-01, 4.0856e-01,
        5.2724e-01, 2.6466e-02, 0.0000e+00, 0.0000e+00, 3.6880e-01, 6.0492e-02,
        0.0000e+00, 0.0000e+00, 1.7004e-01, 4.8291e-01, 6.7784e-01, 1.4573e-02,
        0.0000e+00, 7.9193e-02, 0.0000e+00, 0.0000e+00, 9.3218e-02, 4.6077e-01,
        4.5760e-01, 4.3444e-01, 1.9278e-01, 0.0000e+00, 7.7304e-01, 0.0000e+00,
        5.4956e-01, 5.2741e-01, 0.0000e+00, 1.9542e-01, 0.0000e+00, 5.5032e-02,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 3.7545e-01, 6.4552e-01, 0.0000e+00,
        2.8725e-01, 1.2046e-01, 6.8067e-02, 0.0000e+00, 5.6154e-01, 0.0000e+00,
        5.8774e-02, 0.0000e+00, 3.0693e-02, 3.3855e-01, 0.0000e+00, 0.0000e+00,
        9.2428e-02, 4.1654e-01, 0.0000e+00, 0.0000e+00)))

    val output = layer.forward(T(input, T(proposals), imageInfo)).toTensor[Float]

    output.select(1, 1).apply1(a => {
      a should be(0.1516f +- 1e-3f)
      a
    })

    output.select(1, 2).apply1(a => {
      a should be(0.1460f +- 1e-3f)
      a
    })
  }

  "nms new" should "be ok" in {
    val bbox = Tensor[Float](T(T(67921.5938, 67781.3125, 68025.3984, 67962.4141),
      T(68042.6641, 67772.0000, 68178.0703, 67968.0312),
      T(  783.8035,   299.0991,   873.3165,   567.6481),
      T(68045.4922, 67774.6016, 68188.6875, 67966.3203),
      T(47950.1289, 47480.1523, 48021.5781, 47668.2500),
      T(91258.2188, 90791.2656, 91329.7031, 90975.1250),
      T(90677.8828, 90595.8828, 90702.1562, 90624.2969),
      T(70205.9766, 70105.2734, 70276.6875, 70175.4141),
      T(67917.9297, 67781.2734, 68025.7734, 67967.4688),
      T(67939.2031, 67771.5547, 68028.2031, 67802.8906),
      T(74607.7969, 74900.9609, 74877.6953, 75082.0078),
      T(68038.8750, 67773.8516, 68172.1562, 67966.5391),
      T(67921.4219, 67781.7109, 68028.0391, 67959.1562),
      T(48797.2578, 48524.9766, 48821.1680, 48555.2891),
      T(90901.5938, 90629.0391, 90926.5156, 90659.2812),
      T(31671.4375, 31841.8066, 31759.4668, 31894.4922),
      T(34077.5977, 34248.1992, 34165.6484, 34299.8438),
      T(67761.5938, 67930.5391, 67849.4844, 67985.7422),
      T(68043.7656, 67772.0000, 68187.4688, 67968.6641),
      T(70420.0938, 70105.9844, 70466.1328, 70196.7578),
      T(72780.1406, 72608.2734, 72906.2969, 72634.1094),
      T(67928.2578, 67782.7891, 68031.7891, 67960.6406),
      T(68040.7812, 67770.9453, 68190.3125, 67968.6953),
      T(67946.0000, 67775.6797, 68016.0469, 67802.5859),
      T(67919.3750, 67784.1875, 68028.0938, 67965.1875),
      T(90677.4141, 90596.2266, 90702.1484, 90624.9766),
      T(87453.9531, 86931.5625, 87578.9141, 87151.4141),
      T(67936.4688, 67770.8281, 68026.3984, 67803.3906),
      T(67936.4844, 67771.4219, 68030.2031, 67803.0000),
      T(72745.4844, 72583.0781, 72868.1250, 72615.8125),
      T(68044.5000, 67773.1016, 68071.1719, 67803.4141),
      T(70450.7188, 70173.5391, 70476.1094, 70207.7734),
      T(90902.4453, 90629.4297, 90927.0859, 90659.5547),
      T(68138.0938, 67774.8281, 68205.3281, 67947.7109),
      T(  781.8000,   295.8496,   875.5098,   567.6823),
      T(49636.5781, 49762.1484, 49672.4219, 49826.3047),
      T(90537.9531, 90664.0781, 90575.2188, 90729.3359),
      T(72770.2109, 72605.8594, 72911.6172, 72627.6094),
      T(67932.8203, 67774.0312, 68031.2344, 67804.1484),
      T(72742.0234, 72586.1719, 72870.1797, 72618.2266),
      T(68047.5469, 67772.9453, 68187.3516, 67967.1250),
      T(67928.8516, 67775.0781, 68029.5625, 67806.1953),
      T(  859.8731,   298.3667,   878.4621,   314.8396),
      T(87509.3672, 86937.0312, 87577.1250, 87150.3359),
      T(68044.9922, 67774.9922, 68180.3047, 67969.1641),
      T(68040.2891, 67777.4531, 68128.3125, 67963.8438),
      T(  775.4114,   294.5076,   873.2344,   559.4582),
      T(67973.8438, 67787.6875, 68049.8516, 67955.2344),
      T(72776.5078, 72605.4219, 72902.3750, 72773.8672),
      T(70698.8828, 70062.5312, 70719.3047, 70098.5547),
      T(  720.4316,   323.1504,   754.1611,   392.5381),
      T(67926.4297, 67778.6484, 68031.2422, 67956.0469),
      T(72781.8125, 72609.9141, 72905.0156, 72639.7734),
      T(67930.2656, 67773.2344, 68029.4375, 67804.7500),
      T(90859.5000, 90604.3281, 90876.6797, 90628.8359),
      T(89865.7578, 89250.1016, 89888.5703, 89288.9375),
      T(72740.7812, 72588.1953, 72893.3672, 72620.3281),
      T(90885.3828, 90634.2344, 90904.1875, 90658.3984),
      T(90887.0078, 90615.1094, 90903.6641, 90656.6641),
      T(47948.3633, 47474.3477, 48021.7578, 47672.8672),
      T(91256.7344, 90787.6172, 91329.7266, 90977.2422),
      T(67936.5547, 67770.6875, 68029.2578, 67803.9297),
      T(68041.1797, 67772.4062, 68180.0781, 67961.5391),
      T(  774.4639,   295.5386,   876.3511,   569.8804),
      T(72744.3984, 72594.5625, 72906.9062, 72623.5469),
      T(  776.1874,   305.2336,   869.4515,   563.9688),
      T(68144.1875, 67762.4062, 68212.8984, 67938.6484),
      T(75633.9844, 74980.8594, 75788.0000, 75130.7188),
      T(90884.7656, 90612.8203, 90901.2734, 90636.3750),
      T(90879.0391, 90600.4219, 90900.7656, 90631.8203),
      T(90677.3672, 90597.1172, 90701.2500, 90624.7734),
      T(48710.3555, 48480.1875, 48728.9688, 48523.5430),
      T(90815.1094, 90586.1406, 90834.1094, 90628.5859),
      T(70417.7109, 70105.4375, 70467.1953, 70205.3203),
      T(72895.3047, 72582.2031, 72979.0859, 72596.1250),
      T(90881.3438, 90611.1719, 90899.8672, 90634.6641),
      T(  773.3849,   298.9041,   886.7017,   561.9930),
      T(87402.0938, 86923.8516, 87575.7891, 87169.0547),
      T(67998.0625, 67769.6719, 68089.8125, 67952.7969),
      T(72776.2578, 72603.8438, 72920.7656, 72777.4297),
      T(  722.6143,   323.5754,   757.3127,   397.7756),
      T(68041.9609, 67770.8516, 68171.7031, 67965.9688),
      T(67939.2188, 67774.6875, 68029.6328, 67894.2109),
      T(67922.5469, 67782.8516, 68024.1484, 67963.8828),
      T(72739.6328, 72599.8438, 72910.8750, 72772.1406),
      T(70696.4297, 70061.7891, 70719.8047, 70097.8906),
      T(68181.4844, 67797.4062, 68206.7891, 67942.0547),
      T(68043.0547, 67771.6797, 68195.7422, 67965.8359),
      T(70417.6797, 70104.3281, 70467.5156, 70192.7812),
      T(72768.0547, 72601.8750, 72938.8828, 72771.1328),
      T(87540.0859, 86964.9609, 87578.1719, 87147.7969),
      T(70206.3438, 70104.2031, 70276.7969, 70174.1094),
      T(90887.9219, 90633.8438, 90906.3828, 90658.3281),
      T(72896.7812, 72581.2422, 72974.9141, 72594.3281),
      T(90883.7266, 90606.8125, 90902.4219, 90634.2344),
      T(87462.2734, 86932.3125, 87574.6953, 87153.7969),
      T(72898.9922, 72580.5547, 72971.1484, 72592.3750),
      T(90886.4609, 90616.1250, 90901.5938, 90639.2891),
      T(90677.2031, 90597.7266, 90701.1328, 90624.5156),
      T(67946.5469, 67773.7734, 68021.8438, 67802.7734),
      T(90861.5156, 90605.9141, 90876.7812, 90629.8672),
      T(90876.5859, 90612.4219, 90893.4844, 90633.0469),
      T(72895.8359, 72583.1172, 72985.4297, 72596.7031),
      T(72781.2031, 72611.2422, 72908.3203, 72642.9297),
      T(90873.3750, 90608.5078, 90887.6797, 90630.8828),
      T(  776.2656,   293.4304,   869.1327,   564.1345),
      T(68042.5391, 67767.8281, 68195.5547, 67969.5703),
      T(90889.7109, 90614.0781, 90903.7266, 90636.5859),
      T(67776.1094, 67801.3281, 67922.9141, 67941.8828),
      T(72784.4609, 72610.5391, 72905.5938, 72622.8906),
      T(67999.3672, 67774.6250, 68182.7656, 67963.3203),
      T(72745.7969, 72596.7969, 72995.4062, 72777.7656),
      T(70419.3438, 70106.2500, 70468.2031, 70205.5000),
      T(68035.9375, 67771.5859, 68199.2188, 67968.8359),
      T(72766.7031, 72589.0547, 73013.9375, 72780.9297),
      T(68097.4531, 67768.5312, 68200.4219, 67954.4453),
      T(70419.7891, 70110.0391, 70467.8438, 70206.4688),
      T(73067.9609, 72844.0469, 73376.0859, 72977.4844),
      T(70400.3438, 70128.2344, 70418.9062, 70176.7578),
      T(67919.8828, 67779.0156, 68026.0781, 67966.6406),
      T(68059.3438, 67776.9453, 68197.5391, 67966.8516),
      T(  774.9525,   299.0056,   875.3057,   565.8669),
      T(90887.0078, 90612.6484, 90903.6172, 90655.8203),
      T(68044.4453, 67779.0000, 68197.2812, 67957.6250),
      T(73086.8203, 72845.8594, 73372.9844, 72968.1719),
      T(90886.3203, 90629.8203, 90903.5469, 90657.4922),
      T(90885.8672, 90632.7422, 90905.9297, 90656.9922),
      T(68236.0859, 67783.4453, 68293.3594, 67928.7500),
      T(68031.9219, 67772.0547, 68184.5703, 67960.5625),
      T(72760.4844, 72591.7422, 72994.0391, 72770.7031),
      T(67931.1016, 67777.6172, 68037.9453, 67941.4688),
      T(90886.7812, 90603.7188, 90904.1406, 90640.3906),
      T(90883.0469, 90614.2969, 90901.2734, 90657.2734),
      T(68012.4922, 67769.3203, 68196.5547, 67961.8438),
      T(72732.3906, 72585.2188, 72996.3906, 72771.6172),
      T(90876.7266, 90609.1875, 90895.3594, 90632.4609),
      T(68071.7656, 67774.2031, 68200.3516, 67956.3516),
      T(87455.5703, 86931.5312, 87579.1953, 87168.7500),
      T(67940.6953, 67774.6797, 68020.1719, 67803.5938),
      T(72896.8516, 72582.6484, 72963.7500, 72594.1172),
      T(90875.9375, 90611.2109, 90890.5547, 90631.0234),
      T(90885.2734, 90608.6094, 90902.4922, 90640.8125),
      T(70203.8359, 70103.9297, 70276.1719, 70175.5469),
      T(90882.7344, 90614.9219, 90899.4844, 90637.3438),
      T(75515.9219, 74847.6484, 75572.3125, 74912.1641),
      T(90883.8594, 90601.3359, 90903.2812, 90638.4844),
      T(67923.9844, 67776.0391, 68025.8359, 67957.0391),
      T(68038.4844, 67773.2969, 68185.0547, 67802.3750),
      T(67929.4922, 67771.0312, 68030.6875, 67824.3359),
      T(90677.3594, 90595.5625, 90704.6250, 90624.8281),
      T(90889.2031, 90623.3359, 90905.7500, 90656.9922),
      T(67937.1797, 67773.6953, 68023.0000, 67802.8594),
      T(70399.7422, 70128.3672, 70422.1875, 70178.0547),
      T(87535.1797, 86935.3750, 87577.9766, 87151.7422),
      T(68044.1172, 67771.6172, 68181.3828, 67958.6719),
      T(48710.6094, 48481.0859, 48727.2109, 48524.8711),
      T(90815.6172, 90587.4219, 90832.2266, 90629.8047),
      T(67940.2266, 67769.4375, 68024.0234, 67838.0703),
      T(49636.9180, 49763.1992, 49671.6562, 49823.5781),
      T(90538.4609, 90664.7969, 90574.3125, 90727.1953),
      T(87578.8672, 87033.9453, 87632.9766, 87145.2188),
      T(68177.2578, 67802.7266, 68203.4531, 67941.4297),
      T(67950.3906, 67770.6641, 68023.9375, 67818.6094),
      T(68047.0000, 67771.1641, 68194.4141, 67970.1875),
      T(90874.8516, 90614.5781, 90890.4922, 90634.3828),
      T(73081.8125, 72839.5781, 73379.8203, 72978.4688),
      T(67919.2734, 67782.3125, 68026.0859, 67963.4766),
      T(67993.3281, 67772.5391, 68026.8047, 67799.3672),
      T(  860.9717,   298.3728,   878.1296,   314.9335),
      T(  774.9040,   302.2672,   874.4405,   560.6750),
      T(90677.9766, 90596.0547, 90701.5703, 90624.5547),
      T(87541.4922, 86938.1719, 87579.3984, 87146.0859),
      T(70206.3516, 70104.3594, 70276.6562, 70174.3672),
      T(70403.9297, 70104.6094, 70479.2969, 70207.4609),
      T(67939.1250, 67767.6719, 68005.6719, 67776.9531),
      T(90883.8281, 90630.4688, 90900.7812, 90658.0547),
      T(87455.1328, 86927.2969, 87578.3906, 87156.7812),
      T(90885.8594, 90601.5234, 90904.8359, 90638.0391),
      T(90883.1562, 90594.0938, 90904.0938, 90637.6719),
      T(67956.1328, 67776.7188, 68009.4531, 67803.6719),
      T(82766.6328, 82190.1406, 82793.7969, 82219.1484),
      T(72793.2578, 72611.8438, 72905.4375, 72624.1172),
      T(70206.6484, 70103.0234, 70275.0859, 70175.3125),
      T(90882.5938, 90604.6719, 90901.6406, 90638.5703),
      T(68149.1016, 67778.0938, 68191.5469, 67888.6406),
      T(90860.2031, 90603.3516, 90876.7109, 90630.1016),
      T(70418.5938, 70105.6797, 70469.6016, 70189.2266),
      T(90676.7578, 90596.6250, 90703.2656, 90625.1172),
      T(67955.3984, 67777.0234, 68038.6250, 67942.6172),
      T(70414.9688, 70113.5625, 70472.6016, 70207.1562),
      T(68039.7422, 67773.2656, 68196.6328, 67965.2344),
      T(72759.2812, 72584.3828, 73006.8750, 72770.4922),
      T(88148.0625, 88369.2422, 88172.6719, 88384.7500),
      T(47949.1797, 47485.1016, 48019.9688, 47669.6328),
      T(91256.9922, 90797.1406, 91327.3359, 90977.0781),
      T(67994.1875, 67772.8359, 68028.6250, 67800.4844),
      T(73084.6016, 72842.0938, 73375.0781, 72954.3203),
      T(67947.8828, 67776.7188, 68018.5156, 67802.0234),
      T(73082.0156, 72846.4531, 73371.1172, 72974.7500),
      T(72745.2109, 72580.5938, 72849.5312, 72597.1797),
      T(90888.7734, 90604.8047, 90904.7578, 90633.0703),
      T(  765.7081,   298.1972,   873.1138,   563.2689),
      T(90889.5000, 90613.2344, 90904.4297, 90652.9297),
      T(67941.7344, 67783.0000, 68046.7266, 67963.6641),
      T(72755.9609, 72601.9922, 72917.6172, 72780.2422),
      T(  787.9422,   294.7326,   875.4632,   562.1059),
      T(68078.1172, 67776.7266, 68203.3359, 67954.1406),
      T(67966.3125, 67774.1953, 68030.0703, 67801.1094),
      T(70403.8594, 70127.5547, 70426.3828, 70178.3125),
      T(72741.7500, 72586.4141, 73036.5078, 72741.6172),
      T(70695.6719, 70063.4531, 70715.5078, 70097.2109),
      T(67967.8125, 67792.6719, 68032.8906, 67870.0234),
      T(90875.2656, 90615.0391, 90903.0078, 90634.8281),
      T(48709.6797, 48480.3398, 48729.1953, 48525.4844),
      T(90813.9688, 90586.2109, 90834.7422, 90627.8203),
      T(88206.0938, 88206.7734, 88272.2500, 88220.1797),
      T(90885.2422, 90602.1562, 90904.1484, 90633.1953),
      T(74597.4375, 74898.0859, 74879.7969, 75081.1172),
      T(88540.8672, 88207.3359, 88580.0391, 88224.2500),
      T(90678.4766, 90595.4844, 90704.6094, 90624.3047),
      T(73064.4844, 72837.4141, 73374.5234, 72964.5234),
      T(70403.3594, 70108.0547, 70469.4297, 70187.4922),
      T(90860.0156, 90606.3828, 90876.5625, 90630.1953),
      T(90675.2812, 90594.7500, 90705.6875, 90625.7344),
      T(68077.2578, 67773.1797, 68194.7031, 67941.2656),
      T(72786.0547, 72610.2500, 72893.5703, 72625.1953),
      T(70424.7734, 70112.6016, 70472.7578, 70207.2578),
      T(68145.9844, 67779.5547, 68198.5938, 67938.9062),
      T(48797.9492, 48525.6836, 48822.1328, 48555.8438),
      T(90902.0703, 90629.7422, 90927.4688, 90659.7422),
      T(  716.2442,   322.4827,   757.0618,   393.2674),
      T(68019.0938, 67770.1641, 68035.1875, 67800.1875),
      T(70209.2812, 70110.7031, 70277.0781, 70174.5703),
      T(87454.8438, 86928.7188, 87574.7344, 87159.3828),
      T(67958.5391, 67773.4219, 68028.1016, 67870.6797),
      T(72769.6641, 72605.2812, 72915.7578, 72716.1328),
      T(67956.0703, 67771.9688, 68022.3438, 67866.7500),
      T(  779.0898,   296.9070,   873.4518,   561.9071),
      T(  765.9117,   297.7490,   871.4752,   557.1160),
      T(68103.7891, 67769.8750, 68211.6797, 67942.2422),
      T(68051.5078, 67769.2031, 68154.7891, 67971.1797),
      T(70206.6641, 70103.8906, 70278.0156, 70175.6797),
      T(90902.4531, 90629.8359, 90926.8594, 90658.9766),
      T(90890.1250, 90603.2812, 90905.1953, 90639.0156),
      T(  775.2350,   303.0510,   877.3627,   564.7310),
      T(75629.1328, 74969.0391, 75788.0000, 75175.7344),
      T(67946.7344, 67767.2188, 68030.8984, 67903.9609),
      T(47948.0430, 47480.5195, 48019.7344, 47671.0391),
      T(91256.0859, 90790.6016, 91329.0078, 90976.7188),
      T(48709.5664, 48480.2773, 48728.0430, 48525.0820),
      T(90814.3828, 90585.9609, 90833.6484, 90629.9844),
      T(72417.7266, 72852.5938, 73090.0469, 72971.2734),
      T(68147.2109, 67778.7422, 68196.0625, 67941.6641),
      T(90885.2266, 90626.8438, 90905.0625, 90657.1484),
      T(67941.8359, 67770.6641, 68030.1406, 67798.6875),
      T(68046.6094, 67773.1484, 68195.7578, 67968.7266),
      T(72760.8906, 72590.7344, 73006.7422, 72781.7969),
      T(31674.6094, 31840.7969, 31762.0801, 31894.8496),
      T(34080.7617, 34246.2812, 34167.6484, 34300.0586),
      T(  775.8542,   294.3729,   872.6589,   558.5731),
      T(70422.4375, 70104.7031, 70477.4297, 70207.4141),
      T(67941.2109, 67773.4609, 68027.3203, 67803.1562),
      T(88152.6641, 88345.9766, 88187.3828, 88356.2188),
      T(90883.3750, 90612.9297, 90900.6172, 90650.1016),
      T(67936.3516, 67769.0781, 68018.4141, 67813.1719),
      T(  722.6049,   325.8499,   753.3174,   390.5512),
      T(68410.1875, 67913.5391, 68450.2578, 67989.9141),
      T(88861.2891, 88365.1328, 88900.1484, 88440.0156),
      T(72743.3047, 72604.0156, 72916.1094, 72755.2969),
      T(88541.5000, 88203.2031, 88569.6094, 88222.4375),
      T(68036.2500, 67772.2344, 68071.5234, 67801.2656),
      T(90896.3438, 90628.9453, 90926.4609, 90658.2812),
      T(67940.3281, 67769.8516, 68022.1875, 67806.6797),
      T(  779.6041,   295.5114,   873.4970,   558.6916),
      T(68151.4531, 67783.1016, 68192.7891, 67835.1484),
      T(48711.6094, 48480.1836, 48729.0703, 48524.6680),
      T(90815.9844, 90585.5547, 90834.4453, 90629.3203),
      T(75628.7969, 74978.1328, 75787.7500, 75135.6875),
      T(90816.2500, 90588.4922, 90833.0781, 90629.7969),
      T(  766.6725,   304.6375,   866.6929,   562.8530),
      T(68127.9062, 67739.4531, 68212.1953, 67936.6875),
      T(70412.9297, 70103.2188, 70475.1875, 70208.3906),
      T(  722.2827,   323.4833,   751.8786,   388.7152),
      T(90886.3203, 90617.6172, 90904.5000, 90654.4062),
      T(  774.7062,   300.7566,   871.9107,   559.8647),
      T(67982.3594, 67770.8594, 68027.5703, 67801.0938),
      T(70699.1094, 70062.5938, 70719.9531, 70098.4766),
      T(67921.2188, 67779.9297, 68023.9219, 67959.8125),
      T(70205.6953, 70101.5078, 70277.4609, 70175.4531),
      T(90679.2031, 90596.7422, 90702.7734, 90624.2969),
      T(68039.3516, 67775.8828, 68171.6250, 67970.1484),
      T(68026.8984, 67770.7812, 68182.8516, 67963.2031),
      T(72777.7266, 72584.0156, 73011.4531, 72770.9219),
      T(90676.4922, 90596.4297, 90704.5312, 90624.4219),
      T(47948.2188, 47481.5273, 48021.4141, 47669.1836),
      T(91256.4062, 90790.5703, 91330.3516, 90976.7422),
      T(90873.7969, 90611.7266, 90895.7891, 90632.3125),
      T(68046.4609, 67771.9297, 68169.7578, 67964.0703),
      T(72690.2109, 72597.1328, 72975.4453, 72778.0703),
      T(67955.2578, 67770.9297, 68030.1484, 67845.0391),
      T(68069.9375, 67770.1328, 68192.8203, 67957.3438),
      T(68041.6328, 67766.6953, 68132.9766, 67955.3828),
      T(67980.1016, 67780.8438, 68166.1719, 67807.8594),
      T(68016.6484, 67768.1016, 68031.4766, 67800.2656),
      T(48797.6758, 48524.6758, 48821.8047, 48555.6250),
      T(68042.6641, 67773.2812, 68071.8281, 67801.3438),
      T(90901.8516, 90629.0312, 90927.2891, 90659.0703),
      T(88541.3984, 88205.8672, 88569.9062, 88224.1875),
      T(75628.3516, 74970.1562, 75787.5312, 75150.0938),
      T(73052.6406, 72843.2656, 73382.0000, 72974.9297),
      T(  721.2811,   322.6065,   760.0037,   396.7521),
      T(67933.0391, 67769.1875, 68029.7734, 67862.7344),
      T(90860.0234, 90605.4375, 90875.9453, 90630.7266),
      T(73085.5469, 72760.9141, 73382.0000, 72980.0000),
      T(67928.7266, 67776.5234, 68016.8828, 67806.3438),
      T(67967.7500, 67795.4219, 68035.7812, 67900.9922),
      T(90874.1250, 90610.8672, 90903.0469, 90633.2500),
      T(67948.9844, 67776.8906, 68019.1484, 67804.2500),
      T(90677.3984, 90596.4062, 90702.6562, 90625.0234),
      T(68038.5078, 67764.1484, 68189.2812, 67967.7500),
      T(72777.8125, 72577.8594, 73008.4141, 72777.6016),
      T(67917.7266, 67782.6250, 68025.1094, 67964.8438),
      T(70399.5234, 70115.9609, 70457.6562, 70196.0469),
      T(70206.3516, 70104.6406, 70277.6172, 70174.1172),
      T(  767.2700,   313.1895,   873.8407,   567.3094),
      T(68128.6016, 67776.6484, 68215.7812, 67939.2031),
      T(70393.0859, 70104.5156, 70477.1953, 70208.6797),
      T(90677.2422, 90595.8672, 90705.8281, 90624.3906),
      T(70196.2812, 70110.9062, 70275.8047, 70174.6953),
      T(67959.4688, 67773.2812, 68030.5312, 67801.7188),
      T(72766.9922, 72605.8047, 72924.8203, 72731.9922),
      T(88152.8828, 88347.8125, 88187.9688, 88358.1094),
      T(90867.3203, 90609.5547, 90905.3047, 90659.2031),
      T(47667.7148, 47294.4062, 47682.1445, 47324.8320),
      T(68033.8906, 67776.5703, 68072.0391, 67801.0703),
      T(67943.2891, 67768.9453, 68027.1875, 67803.7344),
      T(88151.6719, 88343.8359, 88187.3516, 88354.6328),
      T(67919.3125, 67782.5391, 68026.4219, 67964.7812),
      T(90880.6875, 90616.7500, 90902.6172, 90653.8047),
      T(47948.9375, 47479.0820, 48020.9531, 47672.0977),
      T(91257.0312, 90791.5859, 91330.1172, 90978.1641),
      T(67935.9297, 67775.8359, 68022.6172, 67859.7812),
      T(67998.2578, 67771.6406, 68024.7422, 67800.6094),
      T(67941.0859, 67769.2656, 68022.4453, 67803.8594),
      T(70406.2656, 70116.0234, 70466.2266, 70207.4453),
      T(67918.4453, 67782.7344, 68024.2109, 67965.4766),
      T(67946.5391, 67776.0078, 68018.4531, 67883.8594),
      T(  860.5498,   298.0331,   878.4467,   315.0569),
      T(68147.9219, 67778.5625, 68195.2891, 67936.7031),
      T(68012.5469, 67777.1875, 68182.0703, 67806.7891),
      T(68142.1250, 67781.1328, 68200.3359, 67943.2422),
      T(67929.8438, 67776.0078, 68018.7969, 67808.9297),
      T(68044.4297, 67770.2734, 68195.1328, 67968.7109),
      T(72774.5391, 72584.6484, 73020.4688, 72783.3359),
      T(70404.2656, 70103.6797, 70490.6016, 70204.2109),
      T(72856.0625, 72576.1797, 72987.4688, 72598.1094),
      T(73088.6641, 72839.7656, 73372.4453, 72938.4922),
      T(72767.8594, 72601.5938, 72945.3047, 72779.1094),
      T(  721.1066,   323.6424,   760.8365,   398.9505),
      T(68039.3828, 67780.4453, 68192.8672, 67955.1719),
      T(72774.4922, 72598.9688, 73002.2891, 72757.4531),
      T(50365.2695, 49868.9336, 50403.4805, 49943.7734),
      T(68409.1875, 67912.6875, 68451.5469, 67990.7969),
      T(88861.5234, 88364.5391, 88900.3359, 88440.0625),
      T(  776.5345,   294.8529,   874.1742,   551.7014),
      T(87539.0391, 86937.3828, 87579.3516, 87148.6016),
      T(68000.3203, 67769.2969, 68160.8203, 67972.0703),
      T(72754.7969, 72582.9609, 72994.7188, 72782.8438),
      T(  764.9678,   296.3777,   882.8935,   559.8351),
      T(68237.8906, 67837.8672, 68292.5703, 67924.5938),
      T(68147.7891, 67780.0078, 68195.1797, 67841.6172),
      T(67968.2578, 67778.1172, 68030.1797, 67873.3906),
      T(70406.3203, 70106.0938, 70467.7734, 70198.2812),
      T(68046.9844, 67773.3672, 68198.0547, 67970.7266),
      T(47949.7930, 47478.5625, 48020.4102, 47676.4961),
      T(70203.1719, 70044.6953, 70275.9453, 70174.5469),
      T(75478.7734, 74842.9844, 75556.4531, 74908.7891),
      T(67919.1719, 67790.4297, 68030.6016, 67957.5625),
      T(70397.8438, 70122.2578, 70438.1328, 70187.3828),
      T(67919.6953, 67787.7891, 68026.1562, 67964.5859),
      T(  721.3393,   322.6873,   763.2393,   403.5675),
      T(68148.5938, 67778.5547, 68193.6328, 67865.3594),
      T(68044.7188, 67793.0312, 68098.0781, 67959.7656),
      T(87540.3125, 86939.3516, 87579.0703, 87150.7891),
      T(68032.2188, 67771.6484, 68107.9141, 67961.8828),
      T(68018.7812, 67741.2031, 68207.0703, 67956.2422),
      T(70407.8906, 70102.2734, 70472.1875, 70207.9219),
      T(47948.3633, 47484.1562, 48020.7070, 47668.3047),
      T(91256.8281, 90793.6094, 91328.4062, 90975.1953),
      T(72632.6953, 72843.8438, 73349.2031, 72975.9219),
      T(67927.6484, 67773.4844, 68015.6406, 67834.6797),
      T(70388.0781, 70102.5859, 70513.1797, 70192.5547),
      T(70413.3203, 70101.6562, 70484.9609, 70208.4141),
      T(70203.5703, 70098.1953, 70278.3203, 70177.8047),
      T(87467.8828, 86948.4219, 87551.6875, 87162.7969),
      T(72746.2188, 72588.6484, 72994.1875, 72769.9062),
      T(67965.9766, 67792.4609, 68032.9531, 67921.8203),
      T(67959.5391, 67778.8672, 68026.3281, 67910.8203),
      T(70419.7891, 70105.7656, 70465.8281, 70188.1016),
      T(  721.4210,   323.3069,   756.9585,   396.6703),
      T(68039.4766, 67765.9453, 68191.6797, 67968.1328),
      T(  774.6150,   301.4642,   874.0890,   566.7025),
      T(68044.2109, 67784.6797, 68101.1719, 67949.3906),
      T(  774.5040,   292.1503,   870.9796,   551.0172),
      T(68143.7656, 67779.8984, 68197.3359, 67942.1719),
      T(  720.5509,   323.0395,   754.7926,   392.7066),
      T(87536.9375, 86935.7422, 87579.3672, 87150.3516),
      T(73071.0156, 72833.0938, 73363.4766, 72976.5156),
      T(68048.5625, 67785.4922, 68101.6484, 67960.8438),
      T(  724.9796,   292.3228,   870.8434,   559.7078),
      T(68052.6641, 67746.8125, 68203.6094, 67960.2891),
      T(67939.0781, 67768.6562, 68019.7422, 67806.0469),
      T(87540.9453, 86946.2578, 87579.5312, 87128.7031),
      T(70398.5156, 70104.4922, 70481.6094, 70207.2344),
      T(72779.9766, 72615.4375, 72907.1562, 72677.7812),
      T(70200.0781, 70104.1094, 70276.3125, 70176.3047),
      T(68035.4141, 67767.7500, 68161.6250, 67920.0000),
      T(70202.9453, 70102.3828, 70278.3438, 70177.8203),
      T(72646.7969, 72833.0156, 73349.3281, 72978.3359),
      T(70210.5547, 70109.3281, 70274.4766, 70173.8594),
      T(70416.7031, 70102.8672, 70471.3359, 70204.0312),
      T(67962.9922, 67785.3828, 68029.5781, 67878.4375),
      T(70396.1875, 70119.1328, 70439.5781, 70181.7656),
      T(67920.2969, 67780.2891, 68023.1328, 67964.8672),
      T(72736.3047, 72587.7578, 72907.6094, 72779.0078),
      T(67935.2031, 67769.3516, 68020.5938, 67808.9766),
      T(70410.7656, 70098.1250, 70509.1719, 70210.6875),
      T(70397.2969, 70113.6406, 70474.9141, 70184.8594),
      T(87538.0859, 86937.4297, 87579.3125, 87151.9766),
      T(67958.5469, 67769.7031, 68026.2031, 67858.7578),
      T(  773.6367,   294.4303,   876.2031,   562.0031),
      T(67947.9297, 67769.8516, 68016.0078, 67844.8125),
      T(68043.1328, 67789.5312, 68101.9844, 67959.1484),
      T(68051.1719, 67778.5625, 68102.8750, 67842.1328),
      T(68146.6484, 67776.6797, 68190.6641, 67890.2188),
      T(  773.1542,   306.8350,   876.1696,   562.4772),
      T(68063.9531, 67767.3438, 68197.0859, 67968.2031),
      T(87456.7188, 86930.4062, 87579.1094, 87155.0547),
      T(75628.3359, 74978.9219, 75788.0000, 75128.5234),
      T(74595.9141, 74898.5781, 74875.4297, 75079.3047),
      T(87538.4844, 86943.3594, 87579.7031, 87152.9141),
      T(70387.6719, 70105.1484, 70494.9219, 70196.6797),
      T(68050.4453, 67776.0781, 68199.2266, 67960.3359),
      T(  780.0628,   301.4537,   872.4545,   559.6176),
      T(67961.6016, 67772.7578, 68030.2500, 67875.5000),
      T(67981.2578, 67776.6016, 68032.0078, 67877.9531),
      T(70205.7422, 70102.0078, 70276.2578, 70176.1172),
      T(67914.7812, 67782.6094, 68028.0781, 67966.7656),
      T(70413.1328, 70105.7109, 70476.6953, 70199.4922),
      T(  720.8605,   323.7848,   753.5377,   391.1169),
      T(70402.7734, 70103.6562, 70491.9688, 70212.2969),
      T(68148.2812, 67780.8203, 68193.9531, 67859.6875),
      T(  720.9288,   322.4242,   756.4518,   391.2795),
      T(67920.5625, 67788.2891, 68037.6484, 67960.8359),
      T(72735.3359, 72602.2266, 72914.9062, 72769.3750),
      T(68038.0391, 67768.8750, 68075.7656, 67951.3047),
      T(67919.1641, 67780.3281, 67980.6875, 67944.7031),
      T(67949.2812, 67769.8438, 68027.5156, 67804.9219),
      T(68063.6094, 67760.0469, 68172.4297, 67947.2969),
      T(67915.4688, 67788.5859, 68028.3359, 67965.6953),
      T(73052.3359, 72775.7500, 73379.2734, 72957.2188),
      T(67916.2500, 67778.1172, 67997.8750, 67952.6719),
      T(72691.9062, 72599.7969, 73024.2266, 72782.6875),
      T(68048.2266, 67770.2969, 68197.1172, 67967.7812),
      T(47949.2617, 47481.9492, 48021.0742, 47670.0352),
      T(91257.4609, 90792.4453, 91328.6641, 90975.6953),
      T(70811.6875, 70264.5625, 70903.3125, 70488.1406),
      T(67924.8906, 67789.2734, 68029.0156, 67852.8125),
      T(87577.5938, 87035.0312, 87633.9609, 87145.7812),
      T(87466.9766, 86927.5703, 87579.7422, 87152.7031),
      T(73086.8359, 72819.1250, 73375.7344, 72979.3047),
      T(72755.6328, 72579.5938, 73118.8438, 72763.1797),
      T(73073.9844, 72846.7031, 73371.2031, 72977.5859),
      T(83867.2969, 83390.1094, 83956.6562, 83544.9766),
      T(87477.8359, 86994.7031, 87564.1641, 87156.4141),
      T(68143.2969, 67774.8828, 68194.7266, 67950.2969),
      T(68042.9219, 67771.6875, 68094.3672, 67876.8203),
      T(67921.7109, 67775.2891, 68018.9609, 67871.4531),
      T(72761.4141, 72612.1406, 72902.6484, 72780.3125),
      T(68037.3906, 67784.9844, 68121.5078, 67964.8672),
      T(68146.0781, 67779.4453, 68190.9922, 67844.8047),
      T(70206.7500, 70102.8594, 70275.2656, 70175.0391),
      T(68237.5391, 67787.2266, 68292.0000, 67929.9766),
      T(68147.5938, 67779.0781, 68192.9844, 67861.2812),
      T(  719.4353,   324.1239,   757.4576,   402.9561),
      T(70180.6406, 70082.1016, 70280.6562, 70175.7031),
      T(75631.6172, 74984.1172, 75788.0000, 75125.0000),
      T(67918.8984, 67783.3125, 68000.3125, 67950.9375),
      T(  721.0435,   323.0321,   753.8947,   395.3524),
      T(68239.6797, 67795.6328, 68291.7969, 67925.2891),
      T(68139.2344, 67782.0312, 68202.3750, 67945.0156),
      T(87578.0000, 87036.5391, 87634.1719, 87145.4609),
      T(75634.8125, 74981.1719, 75788.0000, 75129.7344),
      T(70204.1484, 70100.2734, 70278.5625, 70176.1562),
      T(74596.0859, 74898.9844, 74876.3984, 75081.8594),
      T(67922.1797, 67782.5625, 68030.5469, 67968.0703),
      T(72734.3828, 72595.9688, 72908.5625, 72778.2344),
      T(75637.3281, 74982.2109, 75788.0000, 75131.4297),
      T(72762.0469, 72601.1250, 72961.0547, 72771.4922),
      T(  782.4150,   296.4260,   875.1511,   564.6547),
      T(87529.4922, 86936.5391, 87579.0234, 87153.9297),
      T(68236.5547, 67787.7500, 68292.4844, 67926.5625),
      T(68063.6797, 67766.6484, 68206.6016, 67963.4297),
      T(72845.2891, 72574.6484, 73059.1719, 72775.1953),
      T(68045.3203, 67771.6172, 68196.5391, 67971.7578),
      T(72848.3359, 72624.2344, 73012.8906, 72778.0547),
      T(68044.2656, 67773.4844, 68195.2891, 67969.7812),
      T(68094.1875, 67773.0547, 68197.0234, 67959.2422),
      T(72751.9922, 72590.7734, 72954.8516, 72784.4453),
      T(68036.9844, 67773.4844, 68191.8438, 67966.4453),
      T(72784.4688, 72600.1562, 73003.1562, 72776.4609),
      T(75631.8750, 74977.6875, 75788.0000, 75129.1094),
      T(67913.3516, 67780.5625, 68030.6484, 67967.3984),
      T(68043.3828, 67779.4375, 68158.6094, 67970.5781),
      T(67920.9609, 67777.4531, 68032.7344, 67925.4844),
      T(67917.8203, 67786.9531, 68029.8594, 67961.5078),
      T(73039.3047, 72839.9375, 73379.7891, 72975.1016),
      T(  772.8453,   292.7209,   872.6441,   567.7944),
      T(70396.5469, 70103.4531, 70491.1953, 70201.1328),
      T(47950.3672, 47479.5391, 48021.4961, 47670.1797),
      T(91257.8594, 90793.9531, 91329.7188, 90975.8828),
      T(73068.8203, 72841.4922, 73371.6719, 72956.4375),
      T(87455.0625, 86930.0859, 87579.5156, 87133.3281),
      T(67916.9531, 67787.3906, 68026.1719, 67965.3984),
      T(67917.5859, 67779.1719, 68022.7422, 67961.8438),
      T(70192.6719, 70100.4844, 70280.0938, 70175.7500),
      T(  771.8896,   294.8560,   875.1352,   565.5967),
      T(72382.0078, 72850.9688, 73172.2031, 72972.8594),
      T(47950.4336, 47478.1953, 48023.3438, 47671.0625),
      T(70806.0000, 70323.5391, 70882.6250, 70527.7344),
      T(91258.4141, 90791.3359, 91332.4297, 90976.5781),
      T(72739.7578, 72610.7734, 73037.2969, 72782.0469)))

    val scores = Tensor[Float](
      T(0.9947, 0.9699, 0.9950, 0.9387, 0.6087, 0.2012, 0.9231, 0.8322, 0.9845,
      0.5990, 0.9941, 0.7206, 0.9820, 0.0949, 0.5307, 0.0738, 0.0596, 0.0591,
      0.9748, 0.4244, 0.0626, 0.6738, 0.9411, 0.6473, 0.9833, 0.8494, 0.8822,
      0.5020, 0.3018, 0.0843, 0.0859, 0.0661, 0.2174, 0.6988, 0.9644, 0.1256,
      0.6774, 0.0678, 0.1634, 0.1510, 0.9701, 0.2442, 0.0709, 0.6372, 0.7808,
      0.3035, 0.9701, 0.0849, 0.1635, 0.1140, 0.7685, 0.8097, 0.0686, 0.4994,
      0.1219, 0.7129, 0.1358, 0.0922, 0.7060, 0.4320, 0.3446, 0.2506, 0.8608,
      0.9895, 0.0661, 0.2943, 0.2814, 0.9168, 0.6989, 0.1252, 0.8925, 0.0831,
      0.2283, 0.4202, 0.0720, 0.2049, 0.3039, 0.2539, 0.0791, 0.0809, 0.6705,
      0.8530, 0.4641, 0.9193, 0.0616, 0.1791, 0.1717, 0.9059, 0.3946, 0.2374,
      0.0730, 0.6217, 0.0993, 0.1163, 0.3598, 0.6816, 0.0946, 0.7131, 0.9420,
      0.5256, 0.1578, 0.1036, 0.1759, 0.0603, 0.0711, 0.9481, 0.9171, 0.5761,
      0.0638, 0.2535, 0.1566, 0.3878, 0.4887, 0.1362, 0.5656, 0.7092, 0.1300,
      0.7531, 0.0676, 0.9854, 0.8573, 0.9051, 0.4530, 0.7778, 0.3479, 0.3102,
      0.2028, 0.0554, 0.4563, 0.1354, 0.2599, 0.5070, 0.4729, 0.0727, 0.3032,
      0.0520, 0.6680, 0.9132, 0.6639, 0.0618, 0.0861, 0.5507, 0.8282, 0.2338,
      0.0965, 0.4260, 0.7427, 0.0737, 0.0513, 0.4914, 0.0978, 0.4977, 0.0847,
      0.7879, 0.7932, 0.0579, 0.4230, 0.1652, 0.1386, 0.6317, 0.0831, 0.0668,
      0.0763, 0.9090, 0.1197, 0.1362, 0.9603, 0.0503, 0.0628, 0.9393, 0.7673,
      0.9400, 0.8049, 0.3540, 0.0547, 0.0569, 0.8761, 0.1639, 0.0690, 0.5347,
      0.2711, 0.1567, 0.8335, 0.2859, 0.0830, 0.1481, 0.3610, 0.7555, 0.1683,
      0.0742, 0.6737, 0.1920, 0.0799, 0.6634, 0.1825, 0.1053, 0.6807, 0.5179,
      0.1919, 0.0643, 0.2540, 0.3657, 0.0886, 0.0669, 0.3690, 0.6684, 0.5752,
      0.1415, 0.1079, 0.0669, 0.0640, 0.1099, 0.1584, 0.1120, 0.0962, 0.1030,
      0.2805, 0.9899, 0.0723, 0.0589, 0.6028, 0.2255, 0.0940, 0.3415, 0.1126,
      0.1354, 0.0568, 0.3413, 0.1578, 0.0664, 0.2418, 0.0860, 0.3350, 0.8828,
      0.2621, 0.0501, 0.2792, 0.9816, 0.3271, 0.1963, 0.2098, 0.5938, 0.2471,
      0.1416, 0.6862, 0.3974, 0.0633, 0.5411, 0.2297, 0.1016, 0.1970, 0.0817,
      0.7357, 0.1319, 0.0580, 0.7152, 0.2245, 0.0700, 0.0863, 0.9695, 0.3174,
      0.3279, 0.1001, 0.1233, 0.1462, 0.7310, 0.0639, 0.0823, 0.0563, 0.0535,
      0.0625, 0.0836, 0.4884, 0.9586, 0.0749, 0.0892, 0.0759, 0.9205, 0.2370,
      0.0871, 0.0985, 0.1880, 0.6249, 0.1895, 0.7557, 0.0778, 0.1159, 0.8868,
      0.7554, 0.0912, 0.3963, 0.0806, 0.2869, 0.5890, 0.6201, 0.2314, 0.0560,
      0.8152, 0.1842, 0.2278, 0.4951, 0.1452, 0.0673, 0.0569, 0.0560, 0.0720,
      0.2867, 0.0539, 0.3264, 0.6266, 0.5962, 0.1607, 0.0586, 0.0865, 0.1190,
      0.0746, 0.3145, 0.1878, 0.8190, 0.6589, 0.0740, 0.9804, 0.1277, 0.7576,
      0.2033, 0.1763, 0.1231, 0.6063, 0.1422, 0.0533, 0.0716, 0.0639, 0.0628,
      0.0639, 0.0733, 0.1165, 0.0816, 0.9818, 0.0645, 0.4578, 0.2564, 0.2818,
      0.1000, 0.2738, 0.1131, 0.9445, 0.3444, 0.0565, 0.4209, 0.0513, 0.4905,
      0.1023, 0.7570, 0.1114, 0.1758, 0.0593, 0.4061, 0.3029, 0.3822, 0.2911,
      0.2226, 0.0513, 0.0788, 0.0569, 0.9531, 0.1395, 0.0583, 0.3511, 0.0564,
      0.0675, 0.0685, 0.1908, 0.3572, 0.8921, 0.0517, 0.0610, 0.1021, 0.1222,
      0.0714, 0.8363, 0.4285, 0.0679, 0.0632, 0.7339, 0.1019, 0.0867, 0.2470,
      0.5779, 0.1955, 0.0804, 0.0749, 0.1558, 0.0704, 0.5928, 0.4286, 0.2200,
      0.1437, 0.1842, 0.2483, 0.5944, 0.8330, 0.7732, 0.1616, 0.1447, 0.4903,
      0.6460, 0.4222, 0.6426, 0.0670, 0.0588, 0.1820, 0.5308, 0.7171, 0.0593,
      0.1437, 0.6677, 0.0540, 0.5644, 0.0679, 0.1601, 0.2611, 0.0836, 0.0619,
      0.5657, 0.1303, 0.1331, 0.1009, 0.0800, 0.5127, 0.2483, 0.4792, 0.1781,
      0.1308, 0.0584, 0.0704, 0.6708, 0.2500, 0.8947, 0.8579, 0.9871, 0.7753,
      0.0806, 0.5779, 0.8743, 0.2795, 0.0991, 0.8127, 0.4859, 0.2181, 0.6970,
      0.0652, 0.0780, 0.6650, 0.0608, 0.1738, 0.0775, 0.0800, 0.1987, 0.1312,
      0.4022, 0.0589, 0.1712, 0.1016, 0.6961, 0.4632, 0.1895, 0.0538, 0.1064,
      0.0862, 0.7406, 0.4389, 0.0714, 0.7041, 0.0715, 0.2430, 0.6912, 0.0630,
      0.1408, 0.0768, 0.0674, 0.0620, 0.7350, 0.0512, 0.0679, 0.1013, 0.0868,
      0.7138, 0.1037, 0.5197, 0.0865, 0.5689, 0.0514, 0.7756, 0.4393, 0.9701,
      0.1097, 0.1692, 0.7983, 0.2312, 0.8172, 0.2582, 0.0866, 0.0970, 0.0510,
      0.6790, 0.0592, 0.8669, 0.3079, 0.1376, 0.5034, 0.2162, 0.8064, 0.4877,
      0.1893, 0.1677, 0.3567, 0.6875, 0.1361, 0.1107, 0.3561, 0.1974, 0.3494,
      0.6756, 0.8204, 0.5656, 0.3012, 0.3688, 0.0533, 0.3214, 0.0625, 0.2720,
      0.0982))

    val nmsTool: Nms = new Nms

    val indexs = new Array[Int](1000)

    val keepN = nmsTool.nms(scores, bbox, 0.5f, indexs, orderWithBBox = false)

    val expected = Tensor[Float](
      T(2,   0,  10,  18,  98, 171, 277, 137, 182,  50, 117, 252,  97,  55,
      58,  36, 138, 193,  43, 114,  14, 112,  82, 145, 156,  60, 316, 180,
      109, 474, 299, 239,  85, 102, 454,  86, 402, 228, 100, 391,  39, 396,
      414, 158, 322, 164, 213, 208, 195, 215, 376, 262,  92, 445, 144,  96,
      501, 258, 468, 231,  30, 267, 251, 389, 192,  78, 362, 451, 455,  15,
      147, 218, 473, 104,  42,  52,  37, 302,  31, 199, 333, 108, 476, 332,
      529, 355,  17, 433, 174, 466, 361)).add(1.0f)

    println("done")
  }
}

class BoxHeadSerialTest extends ModuleSerializationTest {
  override def test(): Unit = {
    val inChannels: Int = 6
    val resolution: Int = 7
    val scales: Array[Float] = Array[Float](0.25f, 0.125f)
    val samplingRratio: Int = 2
    val scoreThresh: Float = 0.012f
    val nmsThresh: Float = 0.5f
    val detections_per_img: Int = 100
    val representation_size: Int = 1024
    val numClasses: Int = 81

    val layer = new BoxHead(inChannels, resolution, scales, samplingRratio, scoreThresh,
      nmsThresh, detections_per_img, representation_size, numClasses).setName("BoxHead")

    val feature1 = Tensor[Float](1, 6, 3, 4).rand()
    val feature2 = Tensor[Float](1, 6, 5, 2).rand()
    val bbox = Tensor[Float](T(T(1.0f, 3.0f, 2.0f, 6.0f),
      T(3.0f, 5.0f, 6.0f, 7.0f)))
    val imageInfo = Tensor[Float](T(10, 10))

    runSerializationTest(layer, T(T(feature1, feature2), bbox, imageInfo))
  }
}

class BoxPostProcessorSerialTest extends ModuleSerializationTest {
  override def test(): Unit = {
    val layer = new BoxPostProcessor(0.012f, 0.5f, 100, 81).setName("BoxPostProcessor")

    val classLogits = Tensor[Float](2, 81).rand()
    val boxRegression = Tensor[Float](2, 324).rand()
    val bbox = Tensor[Float](T(T(1.0f, 3.0f, 2.0f, 6.0f),
      T(3.0f, 5.0f, 6.0f, 10.0f)))

    runSerializationTest(layer, T(classLogits, boxRegression, bbox, Tensor[Float](T(10, 10))))
  }
}
