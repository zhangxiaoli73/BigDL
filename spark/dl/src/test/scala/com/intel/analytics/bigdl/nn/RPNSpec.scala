/*
 * Copyright 2016 The BigDL Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.intel.analytics.bigdl.nn

import com.intel.analytics.bigdl.tensor.Tensor
import com.intel.analytics.bigdl.utils.T
import org.scalatest.{FlatSpec, Matchers}

class RPNSpec extends FlatSpec with Matchers {
  "rpn head" should "be ok" in {
    val head = new RPNHead(in_channels = 25, num_anchors = 3)

    val input = Tensor[Float](T(T(T(T(0.0313, 0.9142, 0.6995, 0.2265, 0.9035, 0.4504, 0.2945),
      T(0.1221, 0.9339, 0.8726, 0.1126, 0.2084, 0.8763, 0.0415),
      T(0.3770, 0.2440, 0.3218, 0.1542, 0.5076, 0.8074, 0.8129)),
      T(T(0.7885, 0.2348, 0.6174, 0.0232, 0.0431, 0.3204, 0.0198),
        T(0.4314, 0.9786, 0.7550, 0.8997, 0.5800, 0.6276, 0.6976),
        T(0.7800, 0.8226, 0.5723, 0.7290, 0.1355, 0.7151, 0.8471)),
      T(T(0.8168, 0.6961, 0.9575, 0.6649, 0.3845, 0.3402, 0.3015),
        T(0.0015, 0.3344, 0.4686, 0.4361, 0.3123, 0.2859, 0.4865),
        T(0.5204, 0.1734, 0.5101, 0.4992, 0.8460, 0.9999, 0.6857)),
      T(T(0.7885, 0.2380, 0.5148, 0.8232, 0.4424, 0.5556, 0.1047),
        T(0.9509, 0.8306, 0.5654, 0.2320, 0.7713, 0.8814, 0.7075),
        T(0.7822, 0.5304, 0.5661, 0.7950, 0.3274, 0.9394, 0.0420)),
      T(T(0.0317, 0.3707, 0.0534, 0.9096, 0.0242, 0.0103, 0.8939),
        T(0.8550, 0.1131, 0.6247, 0.8427, 0.6274, 0.9651, 0.0217),
        T(0.0016, 0.3425, 0.2249, 0.4054, 0.1824, 0.4421, 0.8939)),
      T(T(0.6424, 0.9497, 0.8550, 0.3848, 0.0706, 0.2589, 0.0153),
        T(0.7806, 0.6396, 0.4219, 0.5165, 0.5109, 0.5059, 0.6959),
        T(0.1816, 0.0708, 0.8430, 0.6070, 0.5487, 0.9609, 0.8605)),
      T(T(0.2183, 0.4619, 0.7792, 0.8814, 0.9194, 0.4758, 0.5954),
        T(0.2939, 0.0226, 0.9672, 0.8326, 0.0757, 0.0391, 0.9877),
        T(0.1379, 0.8524, 0.3919, 0.2018, 0.0328, 0.4591, 0.2569)),
      T(T(0.6015, 0.5484, 0.5023, 0.6253, 0.9764, 0.6290, 0.5741),
        T(0.4362, 0.2075, 0.7673, 0.7689, 0.6446, 0.0353, 0.6460),
        T(0.0032, 0.8583, 0.4840, 0.0557, 0.6161, 0.8939, 0.5098)),
      T(T(0.7205, 0.9055, 0.3215, 0.9609, 0.3839, 0.6418, 0.2984),
        T(0.3960, 0.1345, 0.9985, 0.3301, 0.8696, 0.0500, 0.9774),
        T(0.2279, 0.3890, 0.7118, 0.8920, 0.7905, 0.3738, 0.9170)),
      T(T(0.1454, 0.2818, 0.9765, 0.0479, 0.1829, 0.4127, 0.6768),
        T(0.1736, 0.6306, 0.2190, 0.9004, 0.1757, 0.9779, 0.8087),
        T(0.6855, 0.5910, 0.9412, 0.0293, 0.1652, 0.5032, 0.3584)),
      T(T(0.6492, 0.6302, 0.8550, 0.1705, 0.7625, 0.3298, 0.5084),
        T(0.3608, 0.2561, 0.5536, 0.3898, 0.3026, 0.0755, 0.1741),
        T(0.9519, 0.1854, 0.0661, 0.9366, 0.7609, 0.6358, 0.7601)),
      T(T(0.8287, 0.4303, 0.0912, 0.8605, 0.4425, 0.4284, 0.9424),
        T(0.2567, 0.7929, 0.7527, 0.6320, 0.0554, 0.8034, 0.6380),
        T(0.7207, 0.8662, 0.7340, 0.9478, 0.5484, 0.1254, 0.4947)),
      T(T(0.7463, 0.0996, 0.0187, 0.5572, 0.8148, 0.6555, 0.2687),
        T(0.5720, 0.6828, 0.1702, 0.4309, 0.7950, 0.2296, 0.7246),
        T(0.7406, 0.7589, 0.4545, 0.8788, 0.8801, 0.5269, 0.3437)),
      T(T(0.8444, 0.6680, 0.2387, 0.3425, 0.3747, 0.8692, 0.4199),
        T(0.8449, 0.1921, 0.6649, 0.4800, 0.1061, 0.0142, 0.2962),
        T(0.8627, 0.6797, 0.1625, 0.5202, 0.8751, 0.6778, 0.4831)),
      T(T(0.2187, 0.2125, 0.5024, 0.1880, 0.2200, 0.1993, 0.5057),
        T(0.4871, 0.6900, 0.2217, 0.3685, 0.3250, 0.9206, 0.0475),
        T(0.5182, 0.5658, 0.0149, 0.5792, 0.2191, 0.9254, 0.6726)),
      T(T(0.6967, 0.2864, 0.8949, 0.6310, 0.3137, 0.0443, 0.0604),
        T(0.5671, 0.1681, 0.7633, 0.0913, 0.4567, 0.3819, 0.4977),
        T(0.4280, 0.7244, 0.5969, 0.1358, 0.8725, 0.1701, 0.5505)),
      T(T(0.2170, 0.2326, 0.3646, 0.0980, 0.8508, 0.3020, 0.2554),
        T(0.2294, 0.2194, 0.1796, 0.2489, 0.4471, 0.0905, 0.1937),
        T(0.6545, 0.4480, 0.9998, 0.0336, 0.7480, 0.1099, 0.7938)),
      T(T(0.4849, 0.7888, 0.4893, 0.3805, 0.4942, 0.3750, 0.7976),
        T(0.4781, 0.4738, 0.6667, 0.7985, 0.4603, 0.1959, 0.7910),
        T(0.5275, 0.2628, 0.7252, 0.6617, 0.9180, 0.4193, 0.8111)),
      T(T(0.7328, 0.7793, 0.9706, 0.1361, 0.7630, 0.6602, 0.6845),
        T(0.1637, 0.1704, 0.8821, 0.7461, 0.1849, 0.7693, 0.7008),
        T(0.4268, 0.0835, 0.1632, 0.1730, 0.2707, 0.9837, 0.8514)),
      T(T(0.1973, 0.4030, 0.1195, 0.6409, 0.9414, 0.1462, 0.0573),
        T(0.3189, 0.3881, 0.0166, 0.8298, 0.1184, 0.9346, 0.7522),
        T(0.1246, 0.3513, 0.5758, 0.4101, 0.7541, 0.7979, 0.2877)),
      T(T(0.1608, 0.3219, 0.4746, 0.4893, 0.9893, 0.7528, 0.5211),
        T(0.2151, 0.6067, 0.8604, 0.8942, 0.9914, 0.7054, 0.1150),
        T(0.9930, 0.3567, 0.3466, 0.4074, 0.9320, 0.9363, 0.8554)),
      T(T(0.8784, 0.9765, 0.3911, 0.3027, 0.5390, 0.0129, 0.4729),
        T(0.7369, 0.4392, 0.6277, 0.9847, 0.1561, 0.3104, 0.5422),
        T(0.4337, 0.3390, 0.4041, 0.3530, 0.1178, 0.3208, 0.9110)),
      T(T(0.1915, 0.2502, 0.1366, 0.1084, 0.1980, 0.6508, 0.8341),
        T(0.5789, 0.6618, 0.1712, 0.7393, 0.0142, 0.9696, 0.7283),
        T(0.6012, 0.5682, 0.2957, 0.1386, 0.1003, 0.0703, 0.2168)),
      T(T(0.7910, 0.8571, 0.6632, 0.9710, 0.2277, 0.5853, 0.6764),
        T(0.1943, 0.3601, 0.4118, 0.5429, 0.1254, 0.6507, 0.1031),
        T(0.1800, 0.8794, 0.0848, 0.1824, 0.4815, 0.2202, 0.6758)),
      T(T(0.1879, 0.7919, 0.3418, 0.6811, 0.3503, 0.1468, 0.3552),
        T(0.5468, 0.8506, 0.5285, 0.7491, 0.7240, 0.1963, 0.6180),
        T(0.5145, 0.8449, 0.7963, 0.2868, 0.8202, 0.4271, 0.2833)))))

    val out = head.forward(input)

    println("done")
  }
}
